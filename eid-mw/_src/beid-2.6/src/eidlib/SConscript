# note: log4cplus only needed if _LOGGING_CXX defined

Import('env')
myenv=env.Copy()
obj=myenv.genobj('shlib', myenv)
obj.target='libbeid'
obj.src=Split("""
walldialog.ui

APDU.cpp
CardReader.cpp
Verify.cpp
AutoUpdate.cpp
Certif.cpp
ResponseAPDU.cpp
VersionInfo.cpp
BEIDApp.cpp
CertifManager.cpp
eidlib.cpp
VirtualReader.cpp
CommandAPDU.cpp
OpenSCReader.cpp
wxwalldlg.cpp
""")
obj.libs='crypto ssl beidlibopensc'
obj.libpaths='../newpkcs11/src/libopensc'
obj.includes='../newpkcs11/src/include'
obj.vnum='2.8.0'
obj.execute()
libdir = env['LIBDIR']
env.Alias('install', env.Install(libdir, obj.target + '.so.' + obj.vnum))
env.Alias('install', env.Install(libdir, obj.target + '.so'))
prefix = env['PREFIX']
env.Alias('install', env.Install(prefix + '/include/beid', 'eidlib.h'))
env.Alias('install', env.Install(prefix + '/include/beid', 'eiddefines.h'))
env.Alias('install', env.Install(prefix + '/include/beid', 'eiderrors.h'))
