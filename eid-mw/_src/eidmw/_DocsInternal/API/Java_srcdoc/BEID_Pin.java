/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package be.belgium.eid;

/******************************************************************************//**
  * Class that represents one Pin
  *********************************************************************************/
public class BEID_Pin extends BEID_Crypto {
  private long swigCPtr;

  protected BEID_Pin(long cPtr, boolean cMemoryOwn) {
    super(beidlibJava_WrapperJNI.SWIGBEID_PinUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BEID_Pin obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      beidlibJava_WrapperJNI.delete_BEID_Pin(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

	/** Get the index of the pin */
  public long getIndex() throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Pin_getIndex(swigCPtr, this);
  }

	/** Get the type of the pin */
  public long getType() throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Pin_getType(swigCPtr, this);
  }

	/** Get the id of the pin */
  public long getId() throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Pin_getId(swigCPtr, this);
  }

	/** Get the usage code of the pin */
  public BEID_PinUsage getUsageCode() throws java.lang.Exception {
    return BEID_PinUsage.swigToEnum(beidlibJava_WrapperJNI.BEID_Pin_getUsageCode(swigCPtr, this));
  }

	/** Get the flags of the pin */
  public long getFlags() throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Pin_getFlags(swigCPtr, this);
  }

	/** Get the label of the pin */
  public String getLabel() throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Pin_getLabel(swigCPtr, this);
  }

	/** Return the signature of the pin */
  public BEID_ByteArray getSignature() throws java.lang.Exception {
    return new BEID_ByteArray(beidlibJava_WrapperJNI.BEID_Pin_getSignature(swigCPtr, this), false);
  }

	/**
	  * Return the remaining tries
	  *
	  * This opperation is not supported by all cards.
	  *
	  * @return -1 if not supported, else the number of remaining tries
	  */
  public int getTriesLeft() throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Pin_getTriesLeft(swigCPtr, this);
  }

	/**
	  * Ask the card to verify the pin
	  *
	  * @param csPin is the pin code to verify (if csPin is empty, a popup will ask for the code)
	  * @param ulRemaining return the remaining tries (only if verifying failed)
	  *
	  * @return true if success and false if failed
	  */
  public boolean verifyPin(String csPin, BEID_ulwrapper ulRemaining) throws java.lang.Exception {
	  long		pRemaining = beidlibJava_WrapperJNI.new_ulongp();				// get a C++ ptr
	  boolean	retval     = beidlibJava_WrapperJNI.BEID_Pin_verifyPin(swigCPtr, this, csPin, pRemaining);

	  ulRemaining.m_long = beidlibJava_WrapperJNI.ulongp_value(pRemaining);
	  beidlibJava_WrapperJNI.delete_ulongp(pRemaining);
	  return retval;
}

	/**
	  * Ask the card to change the pin
	  *
	  * if csPin1 or csPin2 are empty, a popup will ask for the codes
	  *
	  * @param csPin1 is the old pin code
	  * @param csPin2 is the new pin code
	  * @param ulRemaining return the remaining tries (only when operation failed)
	  *
	  * @return true if success and false if failed
	  */
  public boolean changePin(String csPin1, String csPin2, BEID_ulwrapper ulRemaining) throws java.lang.Exception {
	  long		pRemaining	= beidlibJava_WrapperJNI.new_ulongp();				// get a C++ ptr
	  boolean	retval		= beidlibJava_WrapperJNI.BEID_Pin_changePin(swigCPtr, this, csPin1, csPin2, pRemaining);

	  ulRemaining.m_long = beidlibJava_WrapperJNI.ulongp_value(pRemaining);
	  beidlibJava_WrapperJNI.delete_ulongp(pRemaining);
	  return retval;
}

}
