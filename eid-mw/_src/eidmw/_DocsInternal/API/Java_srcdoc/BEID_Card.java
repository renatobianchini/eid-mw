/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package be.belgium.eid;

/******************************************************************************//**
  * Base class for all the card types supported
  * BEID_ReaderContext.getCard() will return such an object
  *********************************************************************************/
public class BEID_Card extends BEID_Object {
  private long swigCPtr;

  protected BEID_Card(long cPtr, boolean cMemoryOwn) {
    super(beidlibJava_WrapperJNI.SWIGBEID_CardUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BEID_Card obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      beidlibJava_WrapperJNI.delete_BEID_Card(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }
	/** Return the type of the card */
  public BEID_CardType getType() throws java.lang.Exception {
    return BEID_CardType.swigToEnum(beidlibJava_WrapperJNI.BEID_Card_getType(swigCPtr, this));
  }

 	/**
	 * Get a document from the card.
	 * Throws BEID_ExDocTypeUnknown exception if the document doesn't exist
	 */
  public BEID_XMLDoc getDocument(BEID_DocumentType type) throws java.lang.Exception {
    return new BEID_XMLDoc(beidlibJava_WrapperJNI.BEID_Card_getDocument(swigCPtr, this, type.swigValue()), false);
  }

 	/**
	 * Get the raw data file from the card.
	 * Throws BEID_ExFileTypeUnknown exception if the document doesn't exist
	 */
  public BEID_ByteArray getRawData(BEID_RawDataType type) throws java.lang.Exception {
    return new BEID_ByteArray(beidlibJava_WrapperJNI.BEID_Card_getRawData(swigCPtr, this, type.swigValue()), false);
  }

 	/**
	 * Send an APDU command to the card and get the result
	 * @param cmd the apdu command
	 * @return BEID_ByteArray containing the result
	 */
  public BEID_ByteArray sendAPDU(BEID_ByteArray cmd) throws java.lang.Exception {
    return new BEID_ByteArray(beidlibJava_WrapperJNI.BEID_Card_sendAPDU(swigCPtr, this, BEID_ByteArray.getCPtr(cmd), cmd), true);
  }

 	/**
	 * Read a file from the card
	 * @param fileID the path of the file
	 * @param ulOffset the offset in the file to start reading
	 * @param ulMaxLength the maximum number of bytes to read
	 * @return A BEID_ByteArray with the content of the file
	 */
  public BEID_ByteArray readFile(String fileID, long ulOffset, long ulMaxLength) throws java.lang.Exception {
    return new BEID_ByteArray(beidlibJava_WrapperJNI.BEID_Card_readFile__SWIG_0(swigCPtr, this, fileID, ulOffset, ulMaxLength), true);
  }

 	/**
	 * Read a file from the card
	 * @param fileID the path of the file
	 * @param ulOffset the offset in the file start reading
	 * @return A BEID_ByteArray with the content of the file
	 */
  public BEID_ByteArray readFile(String fileID, long ulOffset) throws java.lang.Exception {
    return new BEID_ByteArray(beidlibJava_WrapperJNI.BEID_Card_readFile__SWIG_1(swigCPtr, this, fileID, ulOffset), true);
  }

 	/**
	 * Read a file from the card
	 * @param fileID the path of the file
	 * @return A BEID_ByteArray with the content of the file
	 */
  public BEID_ByteArray readFile(String fileID) throws java.lang.Exception {
    return new BEID_ByteArray(beidlibJava_WrapperJNI.BEID_Card_readFile__SWIG_2(swigCPtr, this, fileID), true);
  }

 	/**
	 * Write to a file on the card
	 * @param fileID the path of the file
	 * @param oData contents the bytes to write
	 * @param ulOffset the offset to begin writing
	 */
  public boolean writeFile(String fileID, BEID_ByteArray oData, long ulOffset) throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Card_writeFile__SWIG_0(swigCPtr, this, fileID, BEID_ByteArray.getCPtr(oData), oData, ulOffset);
  }

 	/**
	 * Write to a file on the card
	 * @param fileID the path of the file
	 * @param oData contents the bytes to write
	 */
  public boolean writeFile(String fileID, BEID_ByteArray oData) throws java.lang.Exception {
    return beidlibJava_WrapperJNI.BEID_Card_writeFile__SWIG_1(swigCPtr, this, fileID, BEID_ByteArray.getCPtr(oData), oData);
  }

}
