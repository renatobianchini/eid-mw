/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package be.belgium.eid;

/******************************************************************************//**
  * Class that holds the possible document types
  *********************************************************************************/
public final class BEID_DocumentType {
	/** Full document : used for for XML/CSV/TLV export */
  public final static BEID_DocumentType BEID_DOCTYPE_FULL = new BEID_DocumentType("BEID_DOCTYPE_FULL", beidlibJava_WrapperJNI.BEID_DOCTYPE_FULL_get());
	/** ID document : used to get values per field */
  public final static BEID_DocumentType BEID_DOCTYPE_ID = new BEID_DocumentType("BEID_DOCTYPE_ID");
	/** picture document (if available) */
  public final static BEID_DocumentType BEID_DOCTYPE_PICTURE = new BEID_DocumentType("BEID_DOCTYPE_PICTURE");
	/** info on the card (if available) */
  public final static BEID_DocumentType BEID_DOCTYPE_INFO = new BEID_DocumentType("BEID_DOCTYPE_INFO");
	/** pin container (if available) */
  public final static BEID_DocumentType BEID_DOCTYPE_PINS = new BEID_DocumentType("BEID_DOCTYPE_PINS");
	/** certificates containert (if available) */
  public final static BEID_DocumentType BEID_DOCTYPE_CERTIFICATES = new BEID_DocumentType("BEID_DOCTYPE_CERTIFICATES");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static BEID_DocumentType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + BEID_DocumentType.class + " with value " + swigValue);
  }

  private BEID_DocumentType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private BEID_DocumentType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private BEID_DocumentType(String swigName, BEID_DocumentType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static BEID_DocumentType[] swigValues = { BEID_DOCTYPE_FULL, BEID_DOCTYPE_ID, BEID_DOCTYPE_PICTURE, BEID_DOCTYPE_INFO, BEID_DOCTYPE_PINS, BEID_DOCTYPE_CERTIFICATES };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

