/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace be.belgium.eid {

using System;
using System.Runtime.InteropServices;

/// <summary>
/// Exception class Card Type Unknown (error code = EIDMW_ERR_CARDTYPE_UNKNOWN).
/// Throw when the card type is not supported.
/// Used in : 
/// - BEID_ReaderContext::getCard()
/// </summary>
public class BEID_ExCardTypeUnknown : BEID_Exception {
  private HandleRef swigCPtr;

  internal BEID_ExCardTypeUnknown(IntPtr cPtr, bool cMemoryOwn) : base(beidlib_dotNetPINVOKE.BEID_ExCardTypeUnknownUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(BEID_ExCardTypeUnknown obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~BEID_ExCardTypeUnknown() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        beidlib_dotNetPINVOKE.delete_BEID_ExCardTypeUnknown(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public BEID_ExCardTypeUnknown() : this(beidlib_dotNetPINVOKE.new_BEID_ExCardTypeUnknown(), true) {
  }

}

}
