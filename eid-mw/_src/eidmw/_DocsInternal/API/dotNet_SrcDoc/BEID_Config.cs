/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace be.belgium.eid {

using System;
using System.Runtime.InteropServices;

/// <summary>Class to access the config parameters.</summary>
public class BEID_Config : BEID_Object {
  private HandleRef swigCPtr;

  internal BEID_Config(IntPtr cPtr, bool cMemoryOwn) : base(beidlib_dotNetPINVOKE.BEID_ConfigUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(BEID_Config obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~BEID_Config() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        beidlib_dotNetPINVOKE.delete_BEID_Config(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  /// <summary>Create object to access parameter Param.</summary>
  public BEID_Config(BEID_Param Param)
      : this(beidlib_dotNetPINVOKE.new_BEID_Config__SWIG_0((int)Param), true)
  {
    if (beidlib_dotNetPINVOKE.SWIGPendingException.Pending) throw beidlib_dotNetPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <summary>Create object to access a string parameter.</summary>
  public BEID_Config(string csName, string czSection, string csDefaultValue)
      : this(beidlib_dotNetPINVOKE.new_BEID_Config__SWIG_1(csName, czSection, csDefaultValue), true)
  {
    if (beidlib_dotNetPINVOKE.SWIGPendingException.Pending) throw beidlib_dotNetPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <summary>Create object to access a numerical parameter.</summary>
  public BEID_Config(string csName, string czSection, int lDefaultValue)
      : this(beidlib_dotNetPINVOKE.new_BEID_Config__SWIG_2(csName, czSection, lDefaultValue), true)
  {
    if (beidlib_dotNetPINVOKE.SWIGPendingException.Pending) throw beidlib_dotNetPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <summary>Return the string value (Throw exception for numerical parameter).</summary>
  public string getString()
  {
    string ret = beidlib_dotNetPINVOKE.BEID_Config_getString(swigCPtr);
    if (beidlib_dotNetPINVOKE.SWIGPendingException.Pending) throw beidlib_dotNetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <summary>Return the numerical value (Throw exception for string parameter).</summary>
  public int getLong()
  {
    int ret = beidlib_dotNetPINVOKE.BEID_Config_getLong(swigCPtr);
    if (beidlib_dotNetPINVOKE.SWIGPendingException.Pending) throw beidlib_dotNetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <summary>Set the string value (Throw exception for numerical parameter).</summary>
  public void setString(string csValue)
  {
    beidlib_dotNetPINVOKE.BEID_Config_setString(swigCPtr, csValue);
    if (beidlib_dotNetPINVOKE.SWIGPendingException.Pending) throw beidlib_dotNetPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <summary>Set the numerical value (Throw exception for string parameter).</summary>
  public void setLong(int lValue)
  {
    beidlib_dotNetPINVOKE.BEID_Config_setLong(swigCPtr, lValue);
    if (beidlib_dotNetPINVOKE.SWIGPendingException.Pending) throw beidlib_dotNetPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
