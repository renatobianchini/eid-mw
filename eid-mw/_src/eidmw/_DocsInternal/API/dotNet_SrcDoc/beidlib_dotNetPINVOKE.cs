/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace be.belgium.eid {

using System;
using System.Runtime.InteropServices;

public delegate void BEID_SetEventDelegate(Int32 lRet, uint ulState, IntPtr pvRef);


class beidlib_dotNetPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("beid35libCS_Wrapper", EntryPoint="SWIGRegisterExceptionCallbacks_beidlib_dotNet")]
    public static extern void SWIGRegisterExceptionCallbacks_beidlib_dotNet(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("beid35libCS_Wrapper", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_beidlib_dotNet")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_beidlib_dotNet(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_beidlib_dotNet(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_beidlib_dotNet(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(beidlib_dotNetPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(beidlib_dotNetPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("beid35libCS_Wrapper", EntryPoint="SWIGRegisterStringCallback_beidlib_dotNet")]
    public static extern void SWIGRegisterStringCallback_beidlib_dotNet(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_beidlib_dotNet(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_OK_get")]
  public static extern int EIDMW_OK_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PARAM_BAD_get")]
  public static extern int EIDMW_ERR_PARAM_BAD_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PARAM_RANGE_get")]
  public static extern int EIDMW_ERR_PARAM_RANGE_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_BAD_PATH_get")]
  public static extern int EIDMW_ERR_BAD_PATH_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_ALGO_BAD_get")]
  public static extern int EIDMW_ERR_ALGO_BAD_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PIN_OPERATION_get")]
  public static extern int EIDMW_ERR_PIN_OPERATION_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PIN_FORMAT_get")]
  public static extern int EIDMW_ERR_PIN_FORMAT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_BAD_USAGE_get")]
  public static extern int EIDMW_ERR_BAD_USAGE_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CARD_get")]
  public static extern int EIDMW_ERR_CARD_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_NOT_AUTHENTICATED_get")]
  public static extern int EIDMW_ERR_NOT_AUTHENTICATED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_NOT_SUPPORTED_get")]
  public static extern int EIDMW_ERR_NOT_SUPPORTED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PIN_BAD_get")]
  public static extern int EIDMW_ERR_PIN_BAD_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PIN_BLOCKED_get")]
  public static extern int EIDMW_ERR_PIN_BLOCKED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_NO_CARD_get")]
  public static extern int EIDMW_ERR_NO_CARD_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_BAD_P1P2_get")]
  public static extern int EIDMW_ERR_BAD_P1P2_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CMD_NOT_ALLOWED_get")]
  public static extern int EIDMW_ERR_CMD_NOT_ALLOWED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_FILE_NOT_FOUND_get")]
  public static extern int EIDMW_ERR_FILE_NOT_FOUND_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_APPLET_VERSION_NOT_FOUND_get")]
  public static extern int EIDMW_ERR_APPLET_VERSION_NOT_FOUND_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_NOT_ACTIVATED_get")]
  public static extern int EIDMW_ERR_NOT_ACTIVATED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CARD_COMM_get")]
  public static extern int EIDMW_ERR_CARD_COMM_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_NO_READER_get")]
  public static extern int EIDMW_ERR_NO_READER_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PINPAD_get")]
  public static extern int EIDMW_ERR_PINPAD_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CANT_CONNECT_get")]
  public static extern int EIDMW_ERR_CANT_CONNECT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CARD_RESET_get")]
  public static extern int EIDMW_ERR_CARD_RESET_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CARD_SHARING_get")]
  public static extern int EIDMW_ERR_CARD_SHARING_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_NOT_TRANSACTED_get")]
  public static extern int EIDMW_ERR_NOT_TRANSACTED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_LIMIT_get")]
  public static extern int EIDMW_ERR_LIMIT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CHECK_get")]
  public static extern int EIDMW_ERR_CHECK_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PCSC_LIB_get")]
  public static extern int EIDMW_ERR_PCSC_LIB_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_ZLIB_RESOLVE_get")]
  public static extern int EIDMW_ERR_ZLIB_RESOLVE_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_UNKNOWN_get")]
  public static extern int EIDMW_ERR_UNKNOWN_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_PINPAD_ERR_get")]
  public static extern int EIDMW_PINPAD_ERR_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_CANT_LOAD_LIB_get")]
  public static extern int EIDMW_CANT_LOAD_LIB_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_MEMORY_get")]
  public static extern int EIDMW_ERR_MEMORY_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_DELETE_CACHE_get")]
  public static extern int EIDMW_ERR_DELETE_CACHE_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_CONF_get")]
  public static extern int EIDMW_CONF_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_CACHE_TAMPERED_get")]
  public static extern int EIDMW_CACHE_TAMPERED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_CREATE_get")]
  public static extern int EIDMW_ERR_SOCKET_CREATE_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_SEND_get")]
  public static extern int EIDMW_ERR_SOCKET_SEND_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_RECV_get")]
  public static extern int EIDMW_ERR_SOCKET_RECV_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_GETHOST_get")]
  public static extern int EIDMW_ERR_SOCKET_GETHOST_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_CONNECT_get")]
  public static extern int EIDMW_ERR_SOCKET_CONNECT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_SOCKET_get")]
  public static extern int EIDMW_ERR_SOCKET_SOCKET_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_BIND_get")]
  public static extern int EIDMW_ERR_SOCKET_BIND_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SOCKET_ACCEPT_get")]
  public static extern int EIDMW_ERR_SOCKET_ACCEPT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_PIN_CANCEL_get")]
  public static extern int EIDMW_ERR_PIN_CANCEL_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_TIMEOUT_get")]
  public static extern int EIDMW_ERR_TIMEOUT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_NEW_PINS_DIFFER_get")]
  public static extern int EIDMW_NEW_PINS_DIFFER_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_WRONG_PIN_FORMAT_get")]
  public static extern int EIDMW_WRONG_PIN_FORMAT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_WRONG_ASN1_FORMAT_get")]
  public static extern int EIDMW_WRONG_ASN1_FORMAT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_FILE_NOT_OPENED_get")]
  public static extern int EIDMW_FILE_NOT_OPENED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_PERMISSION_DENIED_get")]
  public static extern int EIDMW_PERMISSION_DENIED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_INVALID_PATH_get")]
  public static extern int EIDMW_INVALID_PATH_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_TOO_MANY_OPENED_FILES_get")]
  public static extern int EIDMW_TOO_MANY_OPENED_FILES_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_DIR_NOT_OPENED_get")]
  public static extern int EIDMW_DIR_NOT_OPENED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_INTERRUPTION_get")]
  public static extern int EIDMW_INTERRUPTION_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_OVERFLOW_get")]
  public static extern int EIDMW_OVERFLOW_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERROR_IO_get")]
  public static extern int EIDMW_ERROR_IO_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_LOGGER_APPLEAVING_get")]
  public static extern int EIDMW_ERR_LOGGER_APPLEAVING_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_DOCTYPE_UNKNOWN_get")]
  public static extern int EIDMW_ERR_DOCTYPE_UNKNOWN_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CARDTYPE_BAD_get")]
  public static extern int EIDMW_ERR_CARDTYPE_BAD_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CARDTYPE_UNKNOWN_get")]
  public static extern int EIDMW_ERR_CARDTYPE_UNKNOWN_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CERT_NOISSUER_get")]
  public static extern int EIDMW_ERR_CERT_NOISSUER_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_RELEASE_NEEDED_get")]
  public static extern int EIDMW_ERR_RELEASE_NEEDED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_BAD_TRANSACTION_get")]
  public static extern int EIDMW_ERR_BAD_TRANSACTION_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_FILETYPE_UNKNOWN_get")]
  public static extern int EIDMW_ERR_FILETYPE_UNKNOWN_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CARD_CHANGED_get")]
  public static extern int EIDMW_ERR_CARD_CHANGED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_READERSET_CHANGED_get")]
  public static extern int EIDMW_ERR_READERSET_CHANGED_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_NOT_ALLOW_BY_USER_get")]
  public static extern int EIDMW_ERR_NOT_ALLOW_BY_USER_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CERT_NOCRL_get")]
  public static extern int EIDMW_ERR_CERT_NOCRL_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CERT_NOOCSP_get")]
  public static extern int EIDMW_ERR_CERT_NOOCSP_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_CERT_NOROOT_get")]
  public static extern int EIDMW_ERR_CERT_NOROOT_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_USER_MUST_ANSWER_get")]
  public static extern int EIDMW_ERR_USER_MUST_ANSWER_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SYSTEM_get")]
  public static extern int EIDMW_ERR_SYSTEM_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_EIDMW_ERR_SIGNAL_get")]
  public static extern int EIDMW_ERR_SIGNAL_get();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_Exception")]
  public static extern IntPtr new_BEID_Exception(int jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Exception")]
  public static extern void delete_BEID_Exception(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Exception_GetError")]
  public static extern int BEID_Exception_GetError(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExReleaseNeeded")]
  public static extern IntPtr new_BEID_ExReleaseNeeded();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExReleaseNeeded")]
  public static extern void delete_BEID_ExReleaseNeeded(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExUnknown")]
  public static extern IntPtr new_BEID_ExUnknown();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExUnknown")]
  public static extern void delete_BEID_ExUnknown(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExDocTypeUnknown")]
  public static extern IntPtr new_BEID_ExDocTypeUnknown();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExDocTypeUnknown")]
  public static extern void delete_BEID_ExDocTypeUnknown(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExFileTypeUnknown")]
  public static extern IntPtr new_BEID_ExFileTypeUnknown();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExFileTypeUnknown")]
  public static extern void delete_BEID_ExFileTypeUnknown(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExParamRange")]
  public static extern IntPtr new_BEID_ExParamRange();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExParamRange")]
  public static extern void delete_BEID_ExParamRange(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCmdNotAllowed")]
  public static extern IntPtr new_BEID_ExCmdNotAllowed();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCmdNotAllowed")]
  public static extern void delete_BEID_ExCmdNotAllowed(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCmdNotSupported")]
  public static extern IntPtr new_BEID_ExCmdNotSupported();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCmdNotSupported")]
  public static extern void delete_BEID_ExCmdNotSupported(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExNoCardPresent")]
  public static extern IntPtr new_BEID_ExNoCardPresent();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExNoCardPresent")]
  public static extern void delete_BEID_ExNoCardPresent(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCardBadType")]
  public static extern IntPtr new_BEID_ExCardBadType();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCardBadType")]
  public static extern void delete_BEID_ExCardBadType(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCardTypeUnknown")]
  public static extern IntPtr new_BEID_ExCardTypeUnknown();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCardTypeUnknown")]
  public static extern void delete_BEID_ExCardTypeUnknown(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCertNoIssuer")]
  public static extern IntPtr new_BEID_ExCertNoIssuer();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCertNoIssuer")]
  public static extern void delete_BEID_ExCertNoIssuer(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCertNoCrl")]
  public static extern IntPtr new_BEID_ExCertNoCrl();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCertNoCrl")]
  public static extern void delete_BEID_ExCertNoCrl(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCertNoOcsp")]
  public static extern IntPtr new_BEID_ExCertNoOcsp();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCertNoOcsp")]
  public static extern void delete_BEID_ExCertNoOcsp(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCertNoRoot")]
  public static extern IntPtr new_BEID_ExCertNoRoot();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCertNoRoot")]
  public static extern void delete_BEID_ExCertNoRoot(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExBadUsage")]
  public static extern IntPtr new_BEID_ExBadUsage();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExBadUsage")]
  public static extern void delete_BEID_ExBadUsage(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExBadTransaction")]
  public static extern IntPtr new_BEID_ExBadTransaction();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExBadTransaction")]
  public static extern void delete_BEID_ExBadTransaction(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExCardChanged")]
  public static extern IntPtr new_BEID_ExCardChanged();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExCardChanged")]
  public static extern void delete_BEID_ExCardChanged(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExReaderSetChanged")]
  public static extern IntPtr new_BEID_ExReaderSetChanged();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExReaderSetChanged")]
  public static extern void delete_BEID_ExReaderSetChanged(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExNoReader")]
  public static extern IntPtr new_BEID_ExNoReader();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExNoReader")]
  public static extern void delete_BEID_ExNoReader(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExNotAllowByUser")]
  public static extern IntPtr new_BEID_ExNotAllowByUser();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExNotAllowByUser")]
  public static extern void delete_BEID_ExNotAllowByUser(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ExUserMustAnswer")]
  public static extern IntPtr new_BEID_ExUserMustAnswer();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ExUserMustAnswer")]
  public static extern void delete_BEID_ExUserMustAnswer(HandleRef jarg1);

	class CustomExceptionHelper 
	{
		// C# delegate for the C/C++ customExceptionCallback
		public delegate void CustomExceptionDelegate(Int32 beid_excode);
		static CustomExceptionDelegate customDelegate = new CustomExceptionDelegate(SetPendingCustomException);

		[DllImport("beid35libCS_Wrapper", EntryPoint="CustomExceptionRegisterCallback")]
		public static extern void CustomExceptionRegisterCallback(CustomExceptionDelegate customCallback);

		static void SetPendingCustomException(Int32 beid_excode) 
		{ 
			BEID_Exception ex;

				 if(beid_excode==beidlib_dotNet.EIDMW_ERR_PARAM_RANGE)		ex = new BEID_ExParamRange();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_BAD_USAGE)		ex = new BEID_ExBadUsage();	
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_NOT_SUPPORTED)	ex = new BEID_ExCmdNotSupported();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_NO_CARD)			ex = new BEID_ExNoCardPresent();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CMD_NOT_ALLOWED)	ex = new BEID_ExCmdNotAllowed();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_NO_READER)		ex = new BEID_ExNoReader();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_UNKNOWN)			ex = new BEID_ExUnknown();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_DOCTYPE_UNKNOWN)	ex = new BEID_ExDocTypeUnknown();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CARDTYPE_BAD)		ex = new BEID_ExCardBadType();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CARDTYPE_UNKNOWN)	ex = new BEID_ExCardTypeUnknown();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CERT_NOISSUER)	ex = new BEID_ExCertNoIssuer();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_RELEASE_NEEDED)	ex = new BEID_ExReleaseNeeded();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_BAD_TRANSACTION)	ex = new BEID_ExBadTransaction();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_FILETYPE_UNKNOWN)	ex = new BEID_ExFileTypeUnknown();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CARD_CHANGED)		ex = new BEID_ExCardChanged();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_READERSET_CHANGED)ex = new BEID_ExReaderSetChanged();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_NOT_ALLOW_BY_USER)ex = new BEID_ExNotAllowByUser();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CERT_NOCRL)		ex = new BEID_ExCertNoCrl();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CERT_NOOCSP)		ex = new BEID_ExCertNoOcsp();
			else if(beid_excode==beidlib_dotNet.EIDMW_ERR_CERT_NOROOT)		ex = new BEID_ExCertNoRoot();
			else															ex = new BEID_Exception(beid_excode);

			SWIGPendingException.Set(ex);
		}

		static CustomExceptionHelper() 
		{
			CustomExceptionRegisterCallback(customDelegate);
		}
	}
	static CustomExceptionHelper exceptionHelper = new CustomExceptionHelper();


//This will contain the result of the function that return a char**
static public string[] custom_StringArrayResult;

protected class CUSTOM_StringArrayHelper 
{
	public delegate void CUSTOM_StringArrayDelegate(IntPtr p, Int32 size);
	static CUSTOM_StringArrayDelegate stringArrayDelegate = new CUSTOM_StringArrayDelegate(FillStringArrayResult);

	[DllImport("beid35libCS_Wrapper", EntryPoint="CUSTOM_RegisterStringArrayCallback")]
	public static extern void CUSTOM_RegisterStringArrayCallback(CUSTOM_StringArrayDelegate stringArrayDelegate);

	static void FillStringArrayResult(IntPtr ap, Int32 size) 
	{
		IntPtr[] p = new IntPtr[size];
		Marshal.Copy(ap, p, 0, size);

		custom_StringArrayResult = new string[size];
		for (Int32 i = 0; i < size; i++)
		{
			custom_StringArrayResult[i] = Marshal.PtrToStringAnsi(p[i]);
		}
	}

	static CUSTOM_StringArrayHelper() 
	{
		CUSTOM_RegisterStringArrayCallback(stringArrayDelegate);
	}
}

static protected CUSTOM_StringArrayHelper custom_StringArrayHelper = new CUSTOM_StringArrayHelper();


internal class CUSTOM_SetEventHelper 
{
	internal delegate void Internal_SetEventDelegate(Int32 lRet, uint ulState, IntPtr pvRef);
	static Internal_SetEventDelegate setEventDelegate = new Internal_SetEventDelegate(Internal_SetEventCallback);

	internal class delegateRef
	{
		public uint handleRef;
		public BEID_SetEventDelegate functionRef;
		public IntPtr ptrRef;
	}

	internal static int countRef=0;
	internal static System.Collections.Hashtable delegateRefs = new System.Collections.Hashtable();

	[DllImport("beid35libCS_Wrapper", EntryPoint="CUSTOM_RegisterSetEventCallback")]
	internal static extern void CUSTOM_RegisterSetEventCallback(Internal_SetEventDelegate setEventDelegate);

	static void Internal_SetEventCallback(Int32 lRet, uint ulState, IntPtr pvRef) 
	{
		//Call the proper delegate with ptrRef
		int lRef=pvRef.ToInt32();

		if(delegateRefs.ContainsKey(lRef))
		{
			delegateRef delegateCallback = (delegateRef)delegateRefs[lRef];
			delegateCallback.functionRef(lRet,ulState,delegateCallback.ptrRef);
		}
	}

	static CUSTOM_SetEventHelper() 
	{
		CUSTOM_RegisterSetEventCallback(setEventDelegate);
	}
}

static protected CUSTOM_SetEventHelper custom_SetEventHelper = new CUSTOM_SetEventHelper();


  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Object")]
  public static extern void delete_BEID_Object(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ByteArray__SWIG_0")]
  public static extern IntPtr new_BEID_ByteArray__SWIG_0();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ByteArray__SWIG_1")]
  public static extern IntPtr new_BEID_ByteArray__SWIG_1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ByteArray__SWIG_2")]
  public static extern IntPtr new_BEID_ByteArray__SWIG_2(byte[] jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ByteArray")]
  public static extern void delete_BEID_ByteArray(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_Append__SWIG_0")]
  public static extern void BEID_ByteArray_Append__SWIG_0(HandleRef jarg1, byte[] jarg2, uint jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_Append__SWIG_1")]
  public static extern void BEID_ByteArray_Append__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_Clear")]
  public static extern void BEID_ByteArray_Clear(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_Equals")]
  public static extern bool BEID_ByteArray_Equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_Size")]
  public static extern uint BEID_ByteArray_Size(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_GetBytes")]
  public static extern IntPtr BEID_ByteArray_GetBytes(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_writeToFile")]
  public static extern bool BEID_ByteArray_writeToFile(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArray_assign")]
  public static extern IntPtr BEID_ByteArray_assign(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_idData_set")]
  public static extern void BEID_RawData_Eid_idData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_idData_get")]
  public static extern IntPtr BEID_RawData_Eid_idData_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_idSigData_set")]
  public static extern void BEID_RawData_Eid_idSigData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_idSigData_get")]
  public static extern IntPtr BEID_RawData_Eid_idSigData_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_addrData_set")]
  public static extern void BEID_RawData_Eid_addrData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_addrData_get")]
  public static extern IntPtr BEID_RawData_Eid_addrData_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_addrSigData_set")]
  public static extern void BEID_RawData_Eid_addrSigData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_addrSigData_get")]
  public static extern IntPtr BEID_RawData_Eid_addrSigData_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_pictureData_set")]
  public static extern void BEID_RawData_Eid_pictureData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_pictureData_get")]
  public static extern IntPtr BEID_RawData_Eid_pictureData_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_cardData_set")]
  public static extern void BEID_RawData_Eid_cardData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_cardData_get")]
  public static extern IntPtr BEID_RawData_Eid_cardData_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_tokenInfo_set")]
  public static extern void BEID_RawData_Eid_tokenInfo_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_tokenInfo_get")]
  public static extern IntPtr BEID_RawData_Eid_tokenInfo_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_certRN_set")]
  public static extern void BEID_RawData_Eid_certRN_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_certRN_get")]
  public static extern IntPtr BEID_RawData_Eid_certRN_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_challenge_set")]
  public static extern void BEID_RawData_Eid_challenge_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_challenge_get")]
  public static extern IntPtr BEID_RawData_Eid_challenge_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_response_set")]
  public static extern void BEID_RawData_Eid_response_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Eid_response_get")]
  public static extern IntPtr BEID_RawData_Eid_response_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_RawData_Eid")]
  public static extern IntPtr new_BEID_RawData_Eid();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_RawData_Eid")]
  public static extern void delete_BEID_RawData_Eid(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Sis_idData_set")]
  public static extern void BEID_RawData_Sis_idData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_RawData_Sis_idData_get")]
  public static extern IntPtr BEID_RawData_Sis_idData_get(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_RawData_Sis")]
  public static extern IntPtr new_BEID_RawData_Sis();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_RawData_Sis")]
  public static extern void delete_BEID_RawData_Sis(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_instance")]
  public static extern IntPtr BEID_ReaderSet_instance();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_initSDK__SWIG_0")]
  public static extern void BEID_ReaderSet_initSDK__SWIG_0(bool jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_initSDK__SWIG_1")]
  public static extern void BEID_ReaderSet_initSDK__SWIG_1();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_releaseSDK")]
  public static extern void BEID_ReaderSet_releaseSDK();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ReaderSet")]
  public static extern void delete_BEID_ReaderSet(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_releaseReaders__SWIG_0")]
  public static extern void BEID_ReaderSet_releaseReaders__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_releaseReaders__SWIG_1")]
  public static extern void BEID_ReaderSet_releaseReaders__SWIG_1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_isReadersChanged")]
  public static extern bool BEID_ReaderSet_isReadersChanged(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_readerList__SWIG_0")]
  public static extern IntPtr BEID_ReaderSet_readerList__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_readerList__SWIG_1")]
  public static extern IntPtr BEID_ReaderSet_readerList__SWIG_1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_getReader")]
  public static extern IntPtr BEID_ReaderSet_getReader(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_getReaderByName")]
  public static extern IntPtr BEID_ReaderSet_getReaderByName(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_readerCount__SWIG_0")]
  public static extern uint BEID_ReaderSet_readerCount__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_readerCount__SWIG_1")]
  public static extern uint BEID_ReaderSet_readerCount__SWIG_1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_getReaderName")]
  public static extern string BEID_ReaderSet_getReaderName(HandleRef jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_getReaderByNum")]
  public static extern IntPtr BEID_ReaderSet_getReaderByNum(HandleRef jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_getReaderByCardSerialNumber")]
  public static extern IntPtr BEID_ReaderSet_getReaderByCardSerialNumber(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSet_flushCache")]
  public static extern bool BEID_ReaderSet_flushCache(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ReaderContext__SWIG_0")]
  public static extern IntPtr new_BEID_ReaderContext__SWIG_0(int jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ReaderContext__SWIG_1")]
  public static extern IntPtr new_BEID_ReaderContext__SWIG_1(int jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ReaderContext__SWIG_2")]
  public static extern IntPtr new_BEID_ReaderContext__SWIG_2(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_ReaderContext__SWIG_3")]
  public static extern IntPtr new_BEID_ReaderContext__SWIG_3(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ReaderContext")]
  public static extern void delete_BEID_ReaderContext(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_getName")]
  public static extern string BEID_ReaderContext_getName(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_isCardPresent")]
  public static extern bool BEID_ReaderContext_isCardPresent(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_releaseCard__SWIG_0")]
  public static extern void BEID_ReaderContext_releaseCard__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_releaseCard__SWIG_1")]
  public static extern void BEID_ReaderContext_releaseCard__SWIG_1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_isCardChanged")]
  public static extern bool BEID_ReaderContext_isCardChanged(HandleRef jarg1, ref uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_getCardType")]
  public static extern int BEID_ReaderContext_getCardType(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_getCard")]
  public static extern IntPtr BEID_ReaderContext_getCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_getEIDCard")]
  public static extern IntPtr BEID_ReaderContext_getEIDCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_getKidsCard")]
  public static extern IntPtr BEID_ReaderContext_getKidsCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_getForeignerCard")]
  public static extern IntPtr BEID_ReaderContext_getForeignerCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_getSISCard")]
  public static extern IntPtr BEID_ReaderContext_getSISCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_SetEventCallback")]
  public static extern uint BEID_ReaderContext_SetEventCallback(HandleRef jarg1, Int32 jarg2, IntPtr jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_StopEventCallback")]
  public static extern void BEID_ReaderContext_StopEventCallback(HandleRef jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_BeginTransaction")]
  public static extern void BEID_ReaderContext_BeginTransaction(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_EndTransaction")]
  public static extern void BEID_ReaderContext_EndTransaction(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContext_isVirtualReader")]
  public static extern bool BEID_ReaderContext_isVirtualReader(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Card")]
  public static extern void delete_BEID_Card(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_getType")]
  public static extern int BEID_Card_getType(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_getDocument")]
  public static extern IntPtr BEID_Card_getDocument(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_getRawData")]
  public static extern IntPtr BEID_Card_getRawData(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_sendAPDU")]
  public static extern IntPtr BEID_Card_sendAPDU(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_readFile__SWIG_0")]
  public static extern IntPtr BEID_Card_readFile__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3, uint jarg4);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_readFile__SWIG_1")]
  public static extern IntPtr BEID_Card_readFile__SWIG_1(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_readFile__SWIG_2")]
  public static extern IntPtr BEID_Card_readFile__SWIG_2(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_writeFile__SWIG_0")]
  public static extern bool BEID_Card_writeFile__SWIG_0(HandleRef jarg1, string jarg2, HandleRef jarg3, uint jarg4);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Card_writeFile__SWIG_1")]
  public static extern bool BEID_Card_writeFile__SWIG_1(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_MemoryCard")]
  public static extern void delete_BEID_MemoryCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_SmartCard")]
  public static extern void delete_BEID_SmartCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_selectApplication")]
  public static extern void BEID_SmartCard_selectApplication(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_sendAPDU__SWIG_0")]
  public static extern IntPtr BEID_SmartCard_sendAPDU__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, string jarg4);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_sendAPDU__SWIG_1")]
  public static extern IntPtr BEID_SmartCard_sendAPDU__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_sendAPDU__SWIG_2")]
  public static extern IntPtr BEID_SmartCard_sendAPDU__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_readFile__SWIG_0")]
  public static extern int BEID_SmartCard_readFile__SWIG_0(HandleRef jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4, string jarg5);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_readFile__SWIG_1")]
  public static extern int BEID_SmartCard_readFile__SWIG_1(HandleRef jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_readFile__SWIG_2")]
  public static extern int BEID_SmartCard_readFile__SWIG_2(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_writeFile__SWIG_0")]
  public static extern bool BEID_SmartCard_writeFile__SWIG_0(HandleRef jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4, string jarg5);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_writeFile__SWIG_1")]
  public static extern bool BEID_SmartCard_writeFile__SWIG_1(HandleRef jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_writeFile__SWIG_2")]
  public static extern bool BEID_SmartCard_writeFile__SWIG_2(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_pinCount")]
  public static extern uint BEID_SmartCard_pinCount(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_getPins")]
  public static extern IntPtr BEID_SmartCard_getPins(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_certificateCount")]
  public static extern uint BEID_SmartCard_certificateCount(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_getCertificates")]
  public static extern IntPtr BEID_SmartCard_getCertificates(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_getChallenge__SWIG_0")]
  public static extern IntPtr BEID_SmartCard_getChallenge__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_getChallenge__SWIG_1")]
  public static extern IntPtr BEID_SmartCard_getChallenge__SWIG_1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_getChallengeResponse")]
  public static extern IntPtr BEID_SmartCard_getChallengeResponse(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCard_verifyChallengeResponse")]
  public static extern bool BEID_SmartCard_verifyChallengeResponse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_SISCard")]
  public static extern void delete_BEID_SISCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SISCard_getDocument")]
  public static extern IntPtr BEID_SISCard_getDocument(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SISCard_getFullDoc")]
  public static extern IntPtr BEID_SISCard_getFullDoc(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SISCard_getID")]
  public static extern IntPtr BEID_SISCard_getID(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SISCard_getRawData")]
  public static extern IntPtr BEID_SISCard_getRawData(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SISCard_getRawData_Id")]
  public static extern IntPtr BEID_SISCard_getRawData_Id(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_EIDCard")]
  public static extern void delete_BEID_EIDCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_isApplicationAllowed")]
  public static extern bool BEID_EIDCard_isApplicationAllowed();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_isTestCard")]
  public static extern bool BEID_EIDCard_isTestCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getAllowTestCard")]
  public static extern bool BEID_EIDCard_getAllowTestCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_setAllowTestCard")]
  public static extern void BEID_EIDCard_setAllowTestCard(HandleRef jarg1, bool jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getDataStatus")]
  public static extern int BEID_EIDCard_getDataStatus(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getDocument")]
  public static extern IntPtr BEID_EIDCard_getDocument(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getFullDoc")]
  public static extern IntPtr BEID_EIDCard_getFullDoc(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getID")]
  public static extern IntPtr BEID_EIDCard_getID(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getPicture")]
  public static extern IntPtr BEID_EIDCard_getPicture(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getVersionInfo")]
  public static extern IntPtr BEID_EIDCard_getVersionInfo(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getCert")]
  public static extern IntPtr BEID_EIDCard_getCert(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRrn")]
  public static extern IntPtr BEID_EIDCard_getRrn(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRoot")]
  public static extern IntPtr BEID_EIDCard_getRoot(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getCA")]
  public static extern IntPtr BEID_EIDCard_getCA(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getSignature")]
  public static extern IntPtr BEID_EIDCard_getSignature(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getAuthentication")]
  public static extern IntPtr BEID_EIDCard_getAuthentication(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData")]
  public static extern IntPtr BEID_EIDCard_getRawData(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_Id")]
  public static extern IntPtr BEID_EIDCard_getRawData_Id(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_IdSig")]
  public static extern IntPtr BEID_EIDCard_getRawData_IdSig(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_Addr")]
  public static extern IntPtr BEID_EIDCard_getRawData_Addr(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_AddrSig")]
  public static extern IntPtr BEID_EIDCard_getRawData_AddrSig(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_Picture")]
  public static extern IntPtr BEID_EIDCard_getRawData_Picture(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_CardInfo")]
  public static extern IntPtr BEID_EIDCard_getRawData_CardInfo(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_TokenInfo")]
  public static extern IntPtr BEID_EIDCard_getRawData_TokenInfo(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_CertRRN")]
  public static extern IntPtr BEID_EIDCard_getRawData_CertRRN(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_Challenge")]
  public static extern IntPtr BEID_EIDCard_getRawData_Challenge(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCard_getRawData_Response")]
  public static extern IntPtr BEID_EIDCard_getRawData_Response(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_KidsCard")]
  public static extern void delete_BEID_KidsCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_ForeignerCard")]
  public static extern void delete_BEID_ForeignerCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_XMLDoc")]
  public static extern void delete_BEID_XMLDoc(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDoc_isAllowed")]
  public static extern bool BEID_XMLDoc_isAllowed(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDoc_getXML")]
  public static extern IntPtr BEID_XMLDoc_getXML(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDoc_getCSV")]
  public static extern IntPtr BEID_XMLDoc_getCSV(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDoc_getTLV")]
  public static extern IntPtr BEID_XMLDoc_getTLV(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDoc_writeXmlToFile")]
  public static extern bool BEID_XMLDoc_writeXmlToFile(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDoc_writeCsvToFile")]
  public static extern bool BEID_XMLDoc_writeCsvToFile(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDoc_writeTlvToFile")]
  public static extern bool BEID_XMLDoc_writeTlvToFile(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Biometric")]
  public static extern void delete_BEID_Biometric(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Crypto")]
  public static extern void delete_BEID_Crypto(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_CardVersionInfo")]
  public static extern void delete_BEID_CardVersionInfo(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getSerialNumber")]
  public static extern string BEID_CardVersionInfo_getSerialNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getComponentCode")]
  public static extern string BEID_CardVersionInfo_getComponentCode(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getOsNumber")]
  public static extern string BEID_CardVersionInfo_getOsNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getOsVersion")]
  public static extern string BEID_CardVersionInfo_getOsVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getSoftmaskNumber")]
  public static extern string BEID_CardVersionInfo_getSoftmaskNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getSoftmaskVersion")]
  public static extern string BEID_CardVersionInfo_getSoftmaskVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getAppletVersion")]
  public static extern string BEID_CardVersionInfo_getAppletVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getGlobalOsVersion")]
  public static extern string BEID_CardVersionInfo_getGlobalOsVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getAppletInterfaceVersion")]
  public static extern string BEID_CardVersionInfo_getAppletInterfaceVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getPKCS1Support")]
  public static extern string BEID_CardVersionInfo_getPKCS1Support(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getKeyExchangeVersion")]
  public static extern string BEID_CardVersionInfo_getKeyExchangeVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getAppletLifeCycle")]
  public static extern string BEID_CardVersionInfo_getAppletLifeCycle(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getGraphicalPersonalisation")]
  public static extern string BEID_CardVersionInfo_getGraphicalPersonalisation(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getElectricalPersonalisation")]
  public static extern string BEID_CardVersionInfo_getElectricalPersonalisation(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getElectricalPersonalisationInterface")]
  public static extern string BEID_CardVersionInfo_getElectricalPersonalisationInterface(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfo_getSignature")]
  public static extern IntPtr BEID_CardVersionInfo_getSignature(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Picture")]
  public static extern void delete_BEID_Picture(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Picture_getData")]
  public static extern IntPtr BEID_Picture_getData(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Picture_getHash")]
  public static extern IntPtr BEID_Picture_getHash(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_SisId")]
  public static extern void delete_BEID_SisId(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getName")]
  public static extern string BEID_SisId_getName(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getSurname")]
  public static extern string BEID_SisId_getSurname(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getInitials")]
  public static extern string BEID_SisId_getInitials(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getGender")]
  public static extern string BEID_SisId_getGender(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getDateOfBirth")]
  public static extern string BEID_SisId_getDateOfBirth(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getSocialSecurityNumber")]
  public static extern string BEID_SisId_getSocialSecurityNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getLogicalNumber")]
  public static extern string BEID_SisId_getLogicalNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getDateOfIssue")]
  public static extern string BEID_SisId_getDateOfIssue(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getValidityBeginDate")]
  public static extern string BEID_SisId_getValidityBeginDate(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisId_getValidityEndDate")]
  public static extern string BEID_SisId_getValidityEndDate(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_EId")]
  public static extern void delete_BEID_EId(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getDocumentVersion")]
  public static extern string BEID_EId_getDocumentVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getDocumentType")]
  public static extern string BEID_EId_getDocumentType(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getFirstName")]
  public static extern string BEID_EId_getFirstName(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getFirstName1")]
  public static extern string BEID_EId_getFirstName1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getFirstName2")]
  public static extern string BEID_EId_getFirstName2(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getSurname")]
  public static extern string BEID_EId_getSurname(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getGender")]
  public static extern string BEID_EId_getGender(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getDateOfBirth")]
  public static extern string BEID_EId_getDateOfBirth(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getLocationOfBirth")]
  public static extern string BEID_EId_getLocationOfBirth(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getNobility")]
  public static extern string BEID_EId_getNobility(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getNationality")]
  public static extern string BEID_EId_getNationality(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getNationalNumber")]
  public static extern string BEID_EId_getNationalNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getDuplicata")]
  public static extern string BEID_EId_getDuplicata(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getSpecialOrganization")]
  public static extern string BEID_EId_getSpecialOrganization(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getMemberOfFamily")]
  public static extern string BEID_EId_getMemberOfFamily(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getLogicalNumber")]
  public static extern string BEID_EId_getLogicalNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getChipNumber")]
  public static extern string BEID_EId_getChipNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getValidityBeginDate")]
  public static extern string BEID_EId_getValidityBeginDate(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getValidityEndDate")]
  public static extern string BEID_EId_getValidityEndDate(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getIssuingMunicipality")]
  public static extern string BEID_EId_getIssuingMunicipality(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getAddressVersion")]
  public static extern string BEID_EId_getAddressVersion(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getStreet")]
  public static extern string BEID_EId_getStreet(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getZipCode")]
  public static extern string BEID_EId_getZipCode(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getMunicipality")]
  public static extern string BEID_EId_getMunicipality(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getCountry")]
  public static extern string BEID_EId_getCountry(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EId_getSpecialStatus")]
  public static extern string BEID_EId_getSpecialStatus(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_SisFullDoc")]
  public static extern void delete_BEID_SisFullDoc(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_EIdFullDoc")]
  public static extern void delete_BEID_EIdFullDoc(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Pins")]
  public static extern void delete_BEID_Pins(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pins_count")]
  public static extern uint BEID_Pins_count(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pins_getPinByNumber")]
  public static extern IntPtr BEID_Pins_getPinByNumber(HandleRef jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Pin")]
  public static extern void delete_BEID_Pin(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getIndex")]
  public static extern uint BEID_Pin_getIndex(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getType")]
  public static extern uint BEID_Pin_getType(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getId")]
  public static extern uint BEID_Pin_getId(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getUsageCode")]
  public static extern int BEID_Pin_getUsageCode(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getFlags")]
  public static extern uint BEID_Pin_getFlags(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getLabel")]
  public static extern string BEID_Pin_getLabel(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getSignature")]
  public static extern IntPtr BEID_Pin_getSignature(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_getTriesLeft")]
  public static extern int BEID_Pin_getTriesLeft(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_verifyPin__SWIG_0")]
  public static extern bool BEID_Pin_verifyPin__SWIG_0(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_verifyPin__SWIG_1")]
  public static extern bool BEID_Pin_verifyPin__SWIG_1(HandleRef jarg1, string jarg2, ref uint jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_changePin__SWIG_0")]
  public static extern bool BEID_Pin_changePin__SWIG_0(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Pin_changePin__SWIG_1")]
  public static extern bool BEID_Pin_changePin__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, ref uint jarg4);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_Crl")]
  public static extern IntPtr new_BEID_Crl(string jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Crl")]
  public static extern void delete_BEID_Crl(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Crl_getUri")]
  public static extern string BEID_Crl_getUri(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Crl_getIssuerName")]
  public static extern string BEID_Crl_getIssuerName(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Crl_getIssuer")]
  public static extern IntPtr BEID_Crl_getIssuer(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Crl_getData__SWIG_0")]
  public static extern int BEID_Crl_getData__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Crl_getData__SWIG_1")]
  public static extern int BEID_Crl_getData__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_OcspResponse")]
  public static extern IntPtr new_BEID_OcspResponse(string jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_OcspResponse")]
  public static extern void delete_BEID_OcspResponse(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_OcspResponse_getUri")]
  public static extern string BEID_OcspResponse_getUri(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_OcspResponse_getResponse")]
  public static extern int BEID_OcspResponse_getResponse(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_Certificates")]
  public static extern IntPtr new_BEID_Certificates();

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Certificates")]
  public static extern void delete_BEID_Certificates(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_countFromCard")]
  public static extern uint BEID_Certificates_countFromCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_countAll")]
  public static extern uint BEID_Certificates_countAll(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getCertFromCard")]
  public static extern IntPtr BEID_Certificates_getCertFromCard(HandleRef jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getCert__SWIG_0")]
  public static extern IntPtr BEID_Certificates_getCert__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getCert__SWIG_1")]
  public static extern IntPtr BEID_Certificates_getCert__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getRrn")]
  public static extern IntPtr BEID_Certificates_getRrn(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getRoot")]
  public static extern IntPtr BEID_Certificates_getRoot(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getCA")]
  public static extern IntPtr BEID_Certificates_getCA(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getSignature")]
  public static extern IntPtr BEID_Certificates_getSignature(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_getAuthentication")]
  public static extern IntPtr BEID_Certificates_getAuthentication(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificates_addCertificate")]
  public static extern IntPtr BEID_Certificates_addCertificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Certificate")]
  public static extern void delete_BEID_Certificate(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getLabel")]
  public static extern string BEID_Certificate_getLabel(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getID")]
  public static extern uint BEID_Certificate_getID(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getStatus__SWIG_0")]
  public static extern int BEID_Certificate_getStatus__SWIG_0(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getStatus__SWIG_1")]
  public static extern int BEID_Certificate_getStatus__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getType")]
  public static extern int BEID_Certificate_getType(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getCertData")]
  public static extern IntPtr BEID_Certificate_getCertData(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getFormattedData")]
  public static extern void BEID_Certificate_getFormattedData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getSerialNumber")]
  public static extern string BEID_Certificate_getSerialNumber(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getOwnerName")]
  public static extern string BEID_Certificate_getOwnerName(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getIssuerName")]
  public static extern string BEID_Certificate_getIssuerName(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getValidityBegin")]
  public static extern string BEID_Certificate_getValidityBegin(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getValidityEnd")]
  public static extern string BEID_Certificate_getValidityEnd(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getKeyLength")]
  public static extern uint BEID_Certificate_getKeyLength(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_isRoot")]
  public static extern bool BEID_Certificate_isRoot(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_isTest")]
  public static extern bool BEID_Certificate_isTest(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_isFromBeidValidChain")]
  public static extern bool BEID_Certificate_isFromBeidValidChain(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_isFromCard")]
  public static extern bool BEID_Certificate_isFromCard(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getIssuer")]
  public static extern IntPtr BEID_Certificate_getIssuer(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_countChildren")]
  public static extern uint BEID_Certificate_countChildren(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getChildren")]
  public static extern IntPtr BEID_Certificate_getChildren(HandleRef jarg1, uint jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getCRL")]
  public static extern IntPtr BEID_Certificate_getCRL(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_getOcspResponse")]
  public static extern IntPtr BEID_Certificate_getOcspResponse(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_verifyCRL__SWIG_0")]
  public static extern int BEID_Certificate_verifyCRL__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_verifyCRL__SWIG_1")]
  public static extern int BEID_Certificate_verifyCRL__SWIG_1(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Certificate_verifyOCSP")]
  public static extern int BEID_Certificate_verifyOCSP(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_Config__SWIG_0")]
  public static extern IntPtr new_BEID_Config__SWIG_0(int jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_Config__SWIG_1")]
  public static extern IntPtr new_BEID_Config__SWIG_1(string jarg1, string jarg2, string jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_new_BEID_Config__SWIG_2")]
  public static extern IntPtr new_BEID_Config__SWIG_2(string jarg1, string jarg2, int jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_delete_BEID_Config")]
  public static extern void delete_BEID_Config(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Config_getString")]
  public static extern string BEID_Config_getString(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Config_getLong")]
  public static extern int BEID_Config_getLong(HandleRef jarg1);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Config_setString")]
  public static extern void BEID_Config_setString(HandleRef jarg1, string jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_Config_setLong")]
  public static extern void BEID_Config_setLong(HandleRef jarg1, int jarg2);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_LOG")]
  public static extern void BEID_LOG(int jarg1, string jarg2, string jarg3);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExReleaseNeededUpcast")]
  public static extern IntPtr BEID_ExReleaseNeededUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExUnknownUpcast")]
  public static extern IntPtr BEID_ExUnknownUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExDocTypeUnknownUpcast")]
  public static extern IntPtr BEID_ExDocTypeUnknownUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExFileTypeUnknownUpcast")]
  public static extern IntPtr BEID_ExFileTypeUnknownUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExParamRangeUpcast")]
  public static extern IntPtr BEID_ExParamRangeUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCmdNotAllowedUpcast")]
  public static extern IntPtr BEID_ExCmdNotAllowedUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCmdNotSupportedUpcast")]
  public static extern IntPtr BEID_ExCmdNotSupportedUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExNoCardPresentUpcast")]
  public static extern IntPtr BEID_ExNoCardPresentUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCardBadTypeUpcast")]
  public static extern IntPtr BEID_ExCardBadTypeUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCardTypeUnknownUpcast")]
  public static extern IntPtr BEID_ExCardTypeUnknownUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCertNoIssuerUpcast")]
  public static extern IntPtr BEID_ExCertNoIssuerUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCertNoCrlUpcast")]
  public static extern IntPtr BEID_ExCertNoCrlUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCertNoOcspUpcast")]
  public static extern IntPtr BEID_ExCertNoOcspUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCertNoRootUpcast")]
  public static extern IntPtr BEID_ExCertNoRootUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExBadUsageUpcast")]
  public static extern IntPtr BEID_ExBadUsageUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExBadTransactionUpcast")]
  public static extern IntPtr BEID_ExBadTransactionUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExCardChangedUpcast")]
  public static extern IntPtr BEID_ExCardChangedUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExReaderSetChangedUpcast")]
  public static extern IntPtr BEID_ExReaderSetChangedUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExNoReaderUpcast")]
  public static extern IntPtr BEID_ExNoReaderUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExNotAllowByUserUpcast")]
  public static extern IntPtr BEID_ExNotAllowByUserUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ExUserMustAnswerUpcast")]
  public static extern IntPtr BEID_ExUserMustAnswerUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ByteArrayUpcast")]
  public static extern IntPtr BEID_ByteArrayUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderSetUpcast")]
  public static extern IntPtr BEID_ReaderSetUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ReaderContextUpcast")]
  public static extern IntPtr BEID_ReaderContextUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardUpcast")]
  public static extern IntPtr BEID_CardUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_MemoryCardUpcast")]
  public static extern IntPtr BEID_MemoryCardUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SmartCardUpcast")]
  public static extern IntPtr BEID_SmartCardUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SISCardUpcast")]
  public static extern IntPtr BEID_SISCardUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIDCardUpcast")]
  public static extern IntPtr BEID_EIDCardUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_KidsCardUpcast")]
  public static extern IntPtr BEID_KidsCardUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ForeignerCardUpcast")]
  public static extern IntPtr BEID_ForeignerCardUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_XMLDocUpcast")]
  public static extern IntPtr BEID_XMLDocUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_BiometricUpcast")]
  public static extern IntPtr BEID_BiometricUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CryptoUpcast")]
  public static extern IntPtr BEID_CryptoUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CardVersionInfoUpcast")]
  public static extern IntPtr BEID_CardVersionInfoUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_PictureUpcast")]
  public static extern IntPtr BEID_PictureUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisIdUpcast")]
  public static extern IntPtr BEID_SisIdUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIdUpcast")]
  public static extern IntPtr BEID_EIdUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_SisFullDocUpcast")]
  public static extern IntPtr BEID_SisFullDocUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_EIdFullDocUpcast")]
  public static extern IntPtr BEID_EIdFullDocUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_PinsUpcast")]
  public static extern IntPtr BEID_PinsUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_PinUpcast")]
  public static extern IntPtr BEID_PinUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CrlUpcast")]
  public static extern IntPtr BEID_CrlUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_OcspResponseUpcast")]
  public static extern IntPtr BEID_OcspResponseUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CertificatesUpcast")]
  public static extern IntPtr BEID_CertificatesUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_CertificateUpcast")]
  public static extern IntPtr BEID_CertificateUpcast(IntPtr objectRef);

  [DllImport("beid35libCS_Wrapper", EntryPoint="CSharp_BEID_ConfigUpcast")]
  public static extern IntPtr BEID_ConfigUpcast(IntPtr objectRef);
}

}
