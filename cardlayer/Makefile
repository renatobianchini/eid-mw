# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/libbeidcardlayer
pkgincludedir = $(includedir)/libbeidcardlayer
pkglibdir = $(libdir)/libbeidcardlayer
pkglibexecdir = $(libexecdir)/libbeidcardlayer
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = i686-w64-mingw32
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	build-aux/config.guess build-aux/config.sub build-aux/depcomp \
	build-aux/install-sh build-aux/ltmain.sh build-aux/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libbeidcardlayer_la_DEPENDENCIES =  \
	$(COMMON_LIBADD)
#libbeidcardlayer_la_DEPENDENCIES =  \
#	$(COMMON_LIBADD)
#libbeidcardlayer_la_DEPENDENCIES = $(COMMON_LIBADD)
am__libbeidcardlayer_la_SOURCES_DIST = ../common/src/mw_util.cpp \
	src/cache.cpp src/card.cpp src/cardfactory.cpp \
	src/cardlayer.cpp src/cardreaderinfo.cpp src/context.cpp \
	src/p15correction.cpp src/pcsc.cpp src/pinpad.cpp \
	src/pinpadlib.cpp src/pkcs15.cpp src/pkcs15parser.cpp \
	src/pkicard.cpp src/reader.cpp src/readersinfo.cpp \
	src/threadpool.cpp src/unknowncard.cpp \
	src/cardpluginbeid/beidcard.cpp \
	src/cardpluginbeid/beidp15correction.cpp \
	src/cardpluginsis/siscard.cpp \
	src/cardpluginsis/sispluginhandler.cpp \
	old/pinpadliboldbeid.cpp
am_libbeidcardlayer_la_OBJECTS = libbeidcardlayer_la-mw_util.lo \
	libbeidcardlayer_la-cache.lo \
	libbeidcardlayer_la-card.lo \
	libbeidcardlayer_la-cardfactory.lo \
	libbeidcardlayer_la-cardlayer.lo \
	libbeidcardlayer_la-cardreaderinfo.lo \
	libbeidcardlayer_la-context.lo \
	libbeidcardlayer_la-p15correction.lo \
	libbeidcardlayer_la-pcsc.lo \
	libbeidcardlayer_la-pinpad.lo \
	libbeidcardlayer_la-pinpadlib.lo \
	libbeidcardlayer_la-pkcs15.lo \
	libbeidcardlayer_la-pkcs15parser.lo \
	libbeidcardlayer_la-pkicard.lo \
	libbeidcardlayer_la-reader.lo \
	libbeidcardlayer_la-readersinfo.lo \
	libbeidcardlayer_la-threadpool.lo \
	libbeidcardlayer_la-unknowncard.lo \
	libbeidcardlayer_la-pinpadliboldbeid.lo \
	libbeidcardlayer_la-beidcard.lo \
	libbeidcardlayer_la-beidp15correction.lo \
	libbeidcardlayer_la-siscard.lo \
	libbeidcardlayer_la-sispluginhandler.lo
#am_libbeidcardlayer_la_OBJECTS =  \
#	libbeidcardlayer_la-mw_util.lo \
#	libbeidcardlayer_la-cache.lo \
#	libbeidcardlayer_la-card.lo \
#	libbeidcardlayer_la-cardfactory.lo \
#	libbeidcardlayer_la-cardlayer.lo \
#	libbeidcardlayer_la-cardreaderinfo.lo \
#	libbeidcardlayer_la-context.lo \
#	libbeidcardlayer_la-p15correction.lo \
#	libbeidcardlayer_la-pcsc.lo \
#	libbeidcardlayer_la-pinpad.lo \
#	libbeidcardlayer_la-pinpadlib.lo \
#	libbeidcardlayer_la-pkcs15.lo \
#	libbeidcardlayer_la-pkcs15parser.lo \
#	libbeidcardlayer_la-pkicard.lo \
#	libbeidcardlayer_la-reader.lo \
#	libbeidcardlayer_la-readersinfo.lo \
#	libbeidcardlayer_la-threadpool.lo \
#	libbeidcardlayer_la-unknowncard.lo \
#	libbeidcardlayer_la-beidcard.lo \
#	libbeidcardlayer_la-beidp15correction.lo \
#	libbeidcardlayer_la-siscard.lo \
#	libbeidcardlayer_la-sispluginhandler.lo
#am_libbeidcardlayer_la_OBJECTS =  \
#	libbeidcardlayer_la-mw_util.lo \
#	libbeidcardlayer_la-cache.lo \
#	libbeidcardlayer_la-card.lo \
#	libbeidcardlayer_la-cardfactory.lo \
#	libbeidcardlayer_la-cardlayer.lo \
#	libbeidcardlayer_la-cardreaderinfo.lo \
#	libbeidcardlayer_la-context.lo \
#	libbeidcardlayer_la-p15correction.lo \
#	libbeidcardlayer_la-pcsc.lo \
#	libbeidcardlayer_la-pinpad.lo \
#	libbeidcardlayer_la-pinpadlib.lo \
#	libbeidcardlayer_la-pkcs15.lo \
#	libbeidcardlayer_la-pkcs15parser.lo \
#	libbeidcardlayer_la-pkicard.lo \
#	libbeidcardlayer_la-reader.lo \
#	libbeidcardlayer_la-readersinfo.lo \
#	libbeidcardlayer_la-threadpool.lo \
#	libbeidcardlayer_la-unknowncard.lo \
#	libbeidcardlayer_la-beidcard.lo \
#	libbeidcardlayer_la-beidp15correction.lo \
#	libbeidcardlayer_la-siscard.lo \
#	libbeidcardlayer_la-sispluginhandler.lo
libbeidcardlayer_la_OBJECTS = $(am_libbeidcardlayer_la_OBJECTS)
libbeidcardlayer_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) \
	$(libbeidcardlayer_la_LDFLAGS) $(LDFLAGS) -o $@
libcardpluginbeid_la_DEPENDENCIES =  \
	$(COMMON_LIBADD) \
	libbeidcardlayer.la
#libcardpluginbeid_la_DEPENDENCIES =  \
#	$(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginbeid_la_DEPENDENCIES = $(COMMON_LIBADD) \
#	libbeidcardlayer.la
am__libcardpluginbeid_la_SOURCES_DIST = ../common/src/mw_util.cpp \
	src/cardpluginbeid/beidcard.cpp \
	src/cardpluginbeid/beidp15correction.cpp src/cache.cpp \
	src/card.cpp src/pkicard.cpp
am_libcardpluginbeid_la_OBJECTS = libcardpluginbeid_la-mw_util.lo \
	libcardpluginbeid_la-beidcard.lo \
	libcardpluginbeid_la-beidp15correction.lo \
	libcardpluginbeid_la-cache.lo \
	libcardpluginbeid_la-card.lo \
	libcardpluginbeid_la-pkicard.lo
#am_libcardpluginbeid_la_OBJECTS =  \
#	libcardpluginbeid_la-mw_util.lo \
#	libcardpluginbeid_la-beidcard.lo \
#	libcardpluginbeid_la-beidp15correction.lo \
#	libcardpluginbeid_la-cache.lo \
#	libcardpluginbeid_la-card.lo \
#	libcardpluginbeid_la-pkicard.lo
#am_libcardpluginbeid_la_OBJECTS =  \
#	libcardpluginbeid_la-mw_util.lo \
#	libcardpluginbeid_la-beidcard.lo \
#	libcardpluginbeid_la-beidp15correction.lo \
#	libcardpluginbeid_la-cache.lo \
#	libcardpluginbeid_la-card.lo \
#	libcardpluginbeid_la-pkicard.lo
libcardpluginbeid_la_OBJECTS = $(am_libcardpluginbeid_la_OBJECTS)
libcardpluginbeid_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) \
	$(libcardpluginbeid_la_LDFLAGS) $(LDFLAGS) -o $@
libcardpluginsis_la_DEPENDENCIES =  \
	$(COMMON_LIBADD) \
	libbeidcardlayer.la
#libcardpluginsis_la_DEPENDENCIES =  \
#	$(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginsis_la_DEPENDENCIES = $(COMMON_LIBADD) \
#	libbeidcardlayer.la
am__libcardpluginsis_la_SOURCES_DIST = ../common/src/mw_util.cpp \
	src/cardpluginsis/siscard.cpp src/cache.cpp src/card.cpp
am_libcardpluginsis_la_OBJECTS = libcardpluginsis_la-mw_util.lo \
	libcardpluginsis_la-siscard.lo \
	libcardpluginsis_la-cache.lo \
	libcardpluginsis_la-card.lo
#am_libcardpluginsis_la_OBJECTS =  \
#	libcardpluginsis_la-mw_util.lo \
#	libcardpluginsis_la-siscard.lo \
#	libcardpluginsis_la-cache.lo \
#	libcardpluginsis_la-card.lo
#am_libcardpluginsis_la_OBJECTS =  \
#	libcardpluginsis_la-mw_util.lo \
#	libcardpluginsis_la-siscard.lo \
#	libcardpluginsis_la-cache.lo \
#	libcardpluginsis_la-card.lo
libcardpluginsis_la_OBJECTS = $(am_libcardpluginsis_la_OBJECTS)
libcardpluginsis_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) \
	$(libcardpluginsis_la_LDFLAGS) $(LDFLAGS) -o $@
libcardpluginsis_acr38u_la_DEPENDENCIES =  \
	$(COMMON_LIBADD) \
	libbeidcardlayer.la
#libcardpluginsis_acr38u_la_DEPENDENCIES =  \
#	$(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginsis_acr38u_la_DEPENDENCIES =  \
#	$(COMMON_LIBADD) libbeidcardlayer.la
am__libcardpluginsis_acr38u_la_SOURCES_DIST =  \
	../common/src/mw_util.cpp src/cardpluginsis_acr38u/siscard.cpp
am_libcardpluginsis_acr38u_la_OBJECTS = libcardpluginsis_acr38u_la-mw_util.lo \
	libcardpluginsis_acr38u_la-siscard.lo
#am_libcardpluginsis_acr38u_la_OBJECTS =  \
#	libcardpluginsis_acr38u_la-mw_util.lo \
#	libcardpluginsis_acr38u_la-siscard.lo
#am_libcardpluginsis_acr38u_la_OBJECTS =  \
#	libcardpluginsis_acr38u_la-mw_util.lo \
#	libcardpluginsis_acr38u_la-siscard.lo
libcardpluginsis_acr38u_la_OBJECTS =  \
	$(am_libcardpluginsis_acr38u_la_OBJECTS)
libcardpluginsis_acr38u_la_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libcardpluginsis_acr38u_la_CXXFLAGS) $(CXXFLAGS) \
	$(libcardpluginsis_acr38u_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libbeidcardlayer_la_SOURCES) \
	$(libcardpluginbeid_la_SOURCES) $(libcardpluginsis_la_SOURCES) \
	$(libcardpluginsis_acr38u_la_SOURCES)
DIST_SOURCES = $(am__libbeidcardlayer_la_SOURCES_DIST) \
	$(am__libcardpluginbeid_la_SOURCES_DIST) \
	$(am__libcardpluginsis_la_SOURCES_DIST) \
	$(am__libcardpluginsis_acr38u_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/frank/OLDTRUNK/eid-mw/cardlayer/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/frank/OLDTRUNK/eid-mw/cardlayer/build-aux/missing --run tar
AR = i686-w64-mingw32-ar
AS = i686-w64-mingw32-as
AUTOCONF = ${SHELL} /home/frank/OLDTRUNK/eid-mw/cardlayer/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/frank/OLDTRUNK/eid-mw/cardlayer/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/frank/OLDTRUNK/eid-mw/cardlayer/build-aux/missing --run automake-1.11
AWK = gawk
CC = i686-w64-mingw32-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = i686-w64-mingw32-gcc -E
CPPFLAGS = 
CXX = i686-w64-mingw32-g++
CXXCPP = i686-w64-mingw32-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = i686-w64-mingw32-dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .exe
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /home/frank/w32/i686-w64-mingw32/bin/ld
LDFLAGS = 
LIBOBJS =  ${LIBOBJDIR}error$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}error$U.lo
MAKEINFO = ${SHELL} /home/frank/OLDTRUNK/eid-mw/cardlayer/build-aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /home/frank/w32/bin/i686-w64-mingw32-nm -B
NMEDIT = 
OBJDUMP = i686-w64-mingw32-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libbeidcardlayer
PACKAGE_BUGREPORT = servicedesk@fedict.be
PACKAGE_NAME = libbeidcardlayer
PACKAGE_STRING = libbeidcardlayer 0.0.1
PACKAGE_TARNAME = libbeidcardlayer
PACKAGE_URL = 
PACKAGE_VERSION = 0.0.1
PATH_SEPARATOR = :
PCSCLITE_INCS = 
PCSCLITE_LIBS = 
RANLIB = i686-w64-mingw32-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = i686-w64-mingw32-strip
VERSION = 0.0.1
abs_builddir = /home/frank/OLDTRUNK/eid-mw/cardlayer
abs_srcdir = /home/frank/OLDTRUNK/eid-mw/cardlayer
abs_top_builddir = /home/frank/OLDTRUNK/eid-mw/cardlayer
abs_top_srcdir = /home/frank/OLDTRUNK/eid-mw/cardlayer
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-w64-mingw32
host_alias = i686-w64-mingw32
host_cpu = i686
host_os = mingw32
host_vendor = w64
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/frank/OLDTRUNK/eid-mw/cardlayer/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = 
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
ACLOCAL_AMFLAGS = -I m4
COMMON_CXXFLAGS = -DEIDMW_CAL_EXPORT -DCAL_BEID -DCARDPLUGIN_IN_CAL -DBEID_35 -DNDEBUG -DBEID_OLD_PINPAD -DLTC_NO_ASM
COMMON_LIBADD = ../common/libbeidcommon.la ../dialogs/libbeiddialogs.la
lib_LTLIBRARIES = libbeidcardlayer.la libcardpluginbeid.la libcardpluginsis.la libcardpluginsis_acr38u.la
#libbeidcardlayer_la_SOURCES = ../common/src/mw_util.cpp src/cache.cpp src/card.cpp src/cardfactory.cpp src/cardlayer.cpp src/cardreaderinfo.cpp src/context.cpp src/p15correction.cpp src/pcsc.cpp src/pinpad.cpp src/pinpadlib.cpp src/pkcs15.cpp src/pkcs15parser.cpp src/pkicard.cpp src/reader.cpp src/readersinfo.cpp src/threadpool.cpp src/unknowncard.cpp src/cardpluginbeid/beidcard.cpp src/cardpluginbeid/beidp15correction.cpp src/cardpluginsis/siscard.cpp src/cardpluginsis/sispluginhandler.cpp

###############################################################################################################################################################################
#libbeidcardlayer_la_SOURCES = ../common/src/mw_util.cpp src/cache.cpp src/card.cpp src/cardfactory.cpp src/cardlayer.cpp src/cardreaderinfo.cpp src/context.cpp src/p15correction.cpp src/pcsc.cpp src/pinpad.cpp src/pinpadlib.cpp src/pkcs15.cpp src/pkcs15parser.cpp src/pkicard.cpp src/reader.cpp src/readersinfo.cpp src/threadpool.cpp src/unknowncard.cpp src/cardpluginbeid/beidcard.cpp src/cardpluginbeid/beidp15correction.cpp src/cardpluginsis/siscard.cpp src/cardpluginsis/sispluginhandler.cpp

##############################################################################################################################################################################
libbeidcardlayer_la_SOURCES = ../common/src/mw_util.cpp src/cache.cpp src/card.cpp src/cardfactory.cpp src/cardlayer.cpp src/cardreaderinfo.cpp src/context.cpp src/p15correction.cpp src/pcsc.cpp src/pinpad.cpp src/pinpadlib.cpp src/pkcs15.cpp src/pkcs15parser.cpp src/pkicard.cpp src/reader.cpp src/readersinfo.cpp src/threadpool.cpp src/unknowncard.cpp old/pinpadliboldbeid.cpp src/cardpluginbeid/beidcard.cpp src/cardpluginbeid/beidp15correction.cpp src/cardpluginsis/siscard.cpp src/cardpluginsis/sispluginhandler.cpp
#libbeidcardlayer_la_CPPFLAGS = $(PCSCLITE_INCS) -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginbeid -I$(srcdir)/src/cardpluginsis -I$(srcdir)/src/cardpluginsis_acr38u
#libbeidcardlayer_la_CPPFLAGS = -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginbeid -I$(srcdir)/src/cardpluginsis -I$(srcdir)/src/cardpluginsis_acr38u -I/System/Library/Frameworks/PCSC.framework/Headers/
libbeidcardlayer_la_CPPFLAGS = -I$(srcdir)/../common -I$(srcdir)/src/cardpluginbeid -I$(srcdir)/src/cardpluginsis -I$(srcdir)/src/cardpluginsis_acr38u
#libbeidcardlayer_la_LDFLAGS = $(PCSCLITE_LIBS) -lpcsclite -avoid-version
#libbeidcardlayer_la_LDFLAGS = -avoid-version
libbeidcardlayer_la_LDFLAGS = -lwinscard -no-undefined -shared -static-libstdc++ -static-libgcc -avoid-version
#libbeidcardlayer_la_LIBADD = $(COMMON_LIBADD)
#libbeidcardlayer_la_LIBADD = $(COMMON_LIBADD)
libbeidcardlayer_la_LIBADD = $(COMMON_LIBADD)
#libbeidcardlayer_la_CXXFLAGS = $(COMMON_CXXFLAGS)
#libbeidcardlayer_la_CXXFLAGS = $(COMMON_CXXFLAGS) -framework PCSC
libbeidcardlayer_la_CXXFLAGS = $(COMMON_CXXFLAGS) -municode -DMINGW_HAS_SECURE_API 
#libcardpluginbeid_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginbeid/beidcard.cpp src/cardpluginbeid/beidp15correction.cpp src/cache.cpp src/card.cpp src/pkicard.cpp
#libcardpluginbeid_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginbeid/beidcard.cpp src/cardpluginbeid/beidp15correction.cpp src/cache.cpp src/card.cpp src/pkicard.cpp
libcardpluginbeid_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginbeid/beidcard.cpp src/cardpluginbeid/beidp15correction.cpp src/cache.cpp src/card.cpp src/pkicard.cpp
#libcardpluginbeid_la_CPPFLAGS = $(PCSCLITE_INCS) -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginbeid 
#libcardpluginbeid_la_CPPFLAGS = -I$(srcdir)/src -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginbeid -I/System/Library/Frameworks/PCSC.framework/Headers/
libcardpluginbeid_la_CPPFLAGS = -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginbeid 
#libcardpluginbeid_la_LDFLAGS = $(PCSCLITE_LIBS) -lpcsclite -avoid-version
#libcardpluginbeid_la_LDFLAGS = -avoid-version
libcardpluginbeid_la_LDFLAGS = -no-undefined -shared -static-libstdc++ -static-libgcc -avoid-version
#libcardpluginbeid_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginbeid_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
libcardpluginbeid_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginbeid_la_CXXFLAGS = $(COMMON_CXXFLAGS)
#libcardpluginbeid_la_CXXFLAGS = $(COMMON_CXXFLAGS) -framework PCSC
libcardpluginbeid_la_CXXFLAGS = $(COMMON_CXXFLAGS) -municode -DMINGW_HAS_SECURE_API
#libcardpluginsis_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginsis/siscard.cpp src/cache.cpp src/card.cpp
#libcardpluginsis_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginsis/siscard.cpp src/cache.cpp src/card.cpp
libcardpluginsis_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginsis/siscard.cpp src/cache.cpp src/card.cpp
#libcardpluginsis_la_CPPFLAGS = $(PCSCLITE_INCS) -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginsis 
#libcardpluginsis_la_CPPFLAGS = -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginsis -I/System/Library/Frameworks/PCSC.framework/Headers/
libcardpluginsis_la_CPPFLAGS = -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginsis 
#libcardpluginsis_la_LDFLAGS = $(PCSCLITE_LIBS) -lpcsclite -avoid-version
#libcardpluginsis_la_LDFLAGS = -avoid-version
libcardpluginsis_la_LDFLAGS = -no-undefined -static-libstdc++ -static-libgcc -shared -avoid-version
#libcardpluginsis_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginsis_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
libcardpluginsis_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginsis_la_CXXFLAGS = $(COMMON_CXXFLAGS)
#libcardpluginsis_la_CXXFLAGS = $(COMMON_CXXFLAGS) -framework PCSC
libcardpluginsis_la_CXXFLAGS = $(COMMON_CXXFLAGS) -municode -DMINGW_HAS_SECURE_API
#libcardpluginsis_acr38u_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginsis_acr38u/siscard.cpp 
#libcardpluginsis_acr38u_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginsis_acr38u/siscard.cpp 
libcardpluginsis_acr38u_la_SOURCES = ../common/src/mw_util.cpp src/cardpluginsis_acr38u/siscard.cpp 
#libcardpluginsis_acr38u_la_CPPFLAGS = $(PCSCLITE_INCS) -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginsis_acr38u
#libcardpluginsis_acr38u_la_CPPFLAGS = -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginsis_acr38u -I/System/Library/Frameworks/PCSC.framework/Headers/
libcardpluginsis_acr38u_la_CPPFLAGS = -I$(srcdir)/../common/src -I$(srcdir)/src/cardpluginsis_acr38u
#libcardpluginsis_acr38u_la_LDFLAGS = $(PCSCLITE_LIBS) -lpcsclite -avoid-version
#libcardpluginsis_acr38u_la_LDFLAGS = -avoid-version
libcardpluginsis_acr38u_la_LDFLAGS = -no-undefined -shared -static-libstdc++ -static-libgcc -avoid-version
#libcardpluginsis_acr38u_la_CXXFLAGS = $(COMMON_CXXFLAGS) -DCARDPLUGINSIS_EXPORTS -DEIDMW_CMN_EXPORT
#libcardpluginsis_acr38u_la_CXXFLAGS = $(COMMON_CXXFLAGS) -DCARDPLUGINSIS_EXPORTS -DEIDMW_CMN_EXPORT -framework PCSC
libcardpluginsis_acr38u_la_CXXFLAGS = $(COMMON_CXXFLAGS) -municode -DMINGW_HAS_SECURE_API -DCARDPLUGINSIS_EXPORTS -DEIDMW_CMN_EXPORT
#libcardpluginsis_acr38u_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
#libcardpluginsis_acr38u_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
libcardpluginsis_acr38u_la_LIBADD = $(COMMON_LIBADD) libbeidcardlayer.la
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbeidcardlayer.la: $(libbeidcardlayer_la_OBJECTS) $(libbeidcardlayer_la_DEPENDENCIES) 
	$(libbeidcardlayer_la_LINK) -rpath $(libdir) $(libbeidcardlayer_la_OBJECTS) $(libbeidcardlayer_la_LIBADD) $(LIBS)
libcardpluginbeid.la: $(libcardpluginbeid_la_OBJECTS) $(libcardpluginbeid_la_DEPENDENCIES) 
	$(libcardpluginbeid_la_LINK) -rpath $(libdir) $(libcardpluginbeid_la_OBJECTS) $(libcardpluginbeid_la_LIBADD) $(LIBS)
libcardpluginsis.la: $(libcardpluginsis_la_OBJECTS) $(libcardpluginsis_la_DEPENDENCIES) 
	$(libcardpluginsis_la_LINK) -rpath $(libdir) $(libcardpluginsis_la_OBJECTS) $(libcardpluginsis_la_LIBADD) $(LIBS)
libcardpluginsis_acr38u.la: $(libcardpluginsis_acr38u_la_OBJECTS) $(libcardpluginsis_acr38u_la_DEPENDENCIES) 
	$(libcardpluginsis_acr38u_la_LINK) -rpath $(libdir) $(libcardpluginsis_acr38u_la_OBJECTS) $(libcardpluginsis_acr38u_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libbeidcardlayer_la-beidcard.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-beidp15correction.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-cache.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-card.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-cardfactory.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-cardlayer.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-cardreaderinfo.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-context.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-mw_util.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-p15correction.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-pcsc.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-pinpad.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-pinpadlib.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-pinpadliboldbeid.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-pkcs15.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-pkcs15parser.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-pkicard.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-reader.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-readersinfo.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-siscard.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-sispluginhandler.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-threadpool.Plo
include ./$(DEPDIR)/libbeidcardlayer_la-unknowncard.Plo
include ./$(DEPDIR)/libcardpluginbeid_la-beidcard.Plo
include ./$(DEPDIR)/libcardpluginbeid_la-beidp15correction.Plo
include ./$(DEPDIR)/libcardpluginbeid_la-cache.Plo
include ./$(DEPDIR)/libcardpluginbeid_la-card.Plo
include ./$(DEPDIR)/libcardpluginbeid_la-mw_util.Plo
include ./$(DEPDIR)/libcardpluginbeid_la-pkicard.Plo
include ./$(DEPDIR)/libcardpluginsis_acr38u_la-mw_util.Plo
include ./$(DEPDIR)/libcardpluginsis_acr38u_la-siscard.Plo
include ./$(DEPDIR)/libcardpluginsis_la-cache.Plo
include ./$(DEPDIR)/libcardpluginsis_la-card.Plo
include ./$(DEPDIR)/libcardpluginsis_la-mw_util.Plo
include ./$(DEPDIR)/libcardpluginsis_la-siscard.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libbeidcardlayer_la-mw_util.lo: ../common/src/mw_util.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-mw_util.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-mw_util.Tpo -c -o libbeidcardlayer_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-mw_util.Tpo $(DEPDIR)/libbeidcardlayer_la-mw_util.Plo
#	source='../common/src/mw_util.cpp' object='libbeidcardlayer_la-mw_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp

libbeidcardlayer_la-cache.lo: src/cache.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-cache.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-cache.Tpo -c -o libbeidcardlayer_la-cache.lo `test -f 'src/cache.cpp' || echo '$(srcdir)/'`src/cache.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-cache.Tpo $(DEPDIR)/libbeidcardlayer_la-cache.Plo
#	source='src/cache.cpp' object='libbeidcardlayer_la-cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-cache.lo `test -f 'src/cache.cpp' || echo '$(srcdir)/'`src/cache.cpp

libbeidcardlayer_la-card.lo: src/card.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-card.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-card.Tpo -c -o libbeidcardlayer_la-card.lo `test -f 'src/card.cpp' || echo '$(srcdir)/'`src/card.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-card.Tpo $(DEPDIR)/libbeidcardlayer_la-card.Plo
#	source='src/card.cpp' object='libbeidcardlayer_la-card.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-card.lo `test -f 'src/card.cpp' || echo '$(srcdir)/'`src/card.cpp

libbeidcardlayer_la-cardfactory.lo: src/cardfactory.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-cardfactory.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-cardfactory.Tpo -c -o libbeidcardlayer_la-cardfactory.lo `test -f 'src/cardfactory.cpp' || echo '$(srcdir)/'`src/cardfactory.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-cardfactory.Tpo $(DEPDIR)/libbeidcardlayer_la-cardfactory.Plo
#	source='src/cardfactory.cpp' object='libbeidcardlayer_la-cardfactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-cardfactory.lo `test -f 'src/cardfactory.cpp' || echo '$(srcdir)/'`src/cardfactory.cpp

libbeidcardlayer_la-cardlayer.lo: src/cardlayer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-cardlayer.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-cardlayer.Tpo -c -o libbeidcardlayer_la-cardlayer.lo `test -f 'src/cardlayer.cpp' || echo '$(srcdir)/'`src/cardlayer.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-cardlayer.Tpo $(DEPDIR)/libbeidcardlayer_la-cardlayer.Plo
#	source='src/cardlayer.cpp' object='libbeidcardlayer_la-cardlayer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-cardlayer.lo `test -f 'src/cardlayer.cpp' || echo '$(srcdir)/'`src/cardlayer.cpp

libbeidcardlayer_la-cardreaderinfo.lo: src/cardreaderinfo.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-cardreaderinfo.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-cardreaderinfo.Tpo -c -o libbeidcardlayer_la-cardreaderinfo.lo `test -f 'src/cardreaderinfo.cpp' || echo '$(srcdir)/'`src/cardreaderinfo.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-cardreaderinfo.Tpo $(DEPDIR)/libbeidcardlayer_la-cardreaderinfo.Plo
#	source='src/cardreaderinfo.cpp' object='libbeidcardlayer_la-cardreaderinfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-cardreaderinfo.lo `test -f 'src/cardreaderinfo.cpp' || echo '$(srcdir)/'`src/cardreaderinfo.cpp

libbeidcardlayer_la-context.lo: src/context.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-context.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-context.Tpo -c -o libbeidcardlayer_la-context.lo `test -f 'src/context.cpp' || echo '$(srcdir)/'`src/context.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-context.Tpo $(DEPDIR)/libbeidcardlayer_la-context.Plo
#	source='src/context.cpp' object='libbeidcardlayer_la-context.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-context.lo `test -f 'src/context.cpp' || echo '$(srcdir)/'`src/context.cpp

libbeidcardlayer_la-p15correction.lo: src/p15correction.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-p15correction.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-p15correction.Tpo -c -o libbeidcardlayer_la-p15correction.lo `test -f 'src/p15correction.cpp' || echo '$(srcdir)/'`src/p15correction.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-p15correction.Tpo $(DEPDIR)/libbeidcardlayer_la-p15correction.Plo
#	source='src/p15correction.cpp' object='libbeidcardlayer_la-p15correction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-p15correction.lo `test -f 'src/p15correction.cpp' || echo '$(srcdir)/'`src/p15correction.cpp

libbeidcardlayer_la-pcsc.lo: src/pcsc.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-pcsc.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-pcsc.Tpo -c -o libbeidcardlayer_la-pcsc.lo `test -f 'src/pcsc.cpp' || echo '$(srcdir)/'`src/pcsc.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-pcsc.Tpo $(DEPDIR)/libbeidcardlayer_la-pcsc.Plo
#	source='src/pcsc.cpp' object='libbeidcardlayer_la-pcsc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-pcsc.lo `test -f 'src/pcsc.cpp' || echo '$(srcdir)/'`src/pcsc.cpp

libbeidcardlayer_la-pinpad.lo: src/pinpad.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-pinpad.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-pinpad.Tpo -c -o libbeidcardlayer_la-pinpad.lo `test -f 'src/pinpad.cpp' || echo '$(srcdir)/'`src/pinpad.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-pinpad.Tpo $(DEPDIR)/libbeidcardlayer_la-pinpad.Plo
#	source='src/pinpad.cpp' object='libbeidcardlayer_la-pinpad.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-pinpad.lo `test -f 'src/pinpad.cpp' || echo '$(srcdir)/'`src/pinpad.cpp

libbeidcardlayer_la-pinpadlib.lo: src/pinpadlib.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-pinpadlib.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-pinpadlib.Tpo -c -o libbeidcardlayer_la-pinpadlib.lo `test -f 'src/pinpadlib.cpp' || echo '$(srcdir)/'`src/pinpadlib.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-pinpadlib.Tpo $(DEPDIR)/libbeidcardlayer_la-pinpadlib.Plo
#	source='src/pinpadlib.cpp' object='libbeidcardlayer_la-pinpadlib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-pinpadlib.lo `test -f 'src/pinpadlib.cpp' || echo '$(srcdir)/'`src/pinpadlib.cpp

libbeidcardlayer_la-pkcs15.lo: src/pkcs15.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-pkcs15.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-pkcs15.Tpo -c -o libbeidcardlayer_la-pkcs15.lo `test -f 'src/pkcs15.cpp' || echo '$(srcdir)/'`src/pkcs15.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-pkcs15.Tpo $(DEPDIR)/libbeidcardlayer_la-pkcs15.Plo
#	source='src/pkcs15.cpp' object='libbeidcardlayer_la-pkcs15.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-pkcs15.lo `test -f 'src/pkcs15.cpp' || echo '$(srcdir)/'`src/pkcs15.cpp

libbeidcardlayer_la-pkcs15parser.lo: src/pkcs15parser.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-pkcs15parser.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-pkcs15parser.Tpo -c -o libbeidcardlayer_la-pkcs15parser.lo `test -f 'src/pkcs15parser.cpp' || echo '$(srcdir)/'`src/pkcs15parser.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-pkcs15parser.Tpo $(DEPDIR)/libbeidcardlayer_la-pkcs15parser.Plo
#	source='src/pkcs15parser.cpp' object='libbeidcardlayer_la-pkcs15parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-pkcs15parser.lo `test -f 'src/pkcs15parser.cpp' || echo '$(srcdir)/'`src/pkcs15parser.cpp

libbeidcardlayer_la-pkicard.lo: src/pkicard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-pkicard.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-pkicard.Tpo -c -o libbeidcardlayer_la-pkicard.lo `test -f 'src/pkicard.cpp' || echo '$(srcdir)/'`src/pkicard.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-pkicard.Tpo $(DEPDIR)/libbeidcardlayer_la-pkicard.Plo
#	source='src/pkicard.cpp' object='libbeidcardlayer_la-pkicard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-pkicard.lo `test -f 'src/pkicard.cpp' || echo '$(srcdir)/'`src/pkicard.cpp

libbeidcardlayer_la-reader.lo: src/reader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-reader.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-reader.Tpo -c -o libbeidcardlayer_la-reader.lo `test -f 'src/reader.cpp' || echo '$(srcdir)/'`src/reader.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-reader.Tpo $(DEPDIR)/libbeidcardlayer_la-reader.Plo
#	source='src/reader.cpp' object='libbeidcardlayer_la-reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-reader.lo `test -f 'src/reader.cpp' || echo '$(srcdir)/'`src/reader.cpp

libbeidcardlayer_la-readersinfo.lo: src/readersinfo.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-readersinfo.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-readersinfo.Tpo -c -o libbeidcardlayer_la-readersinfo.lo `test -f 'src/readersinfo.cpp' || echo '$(srcdir)/'`src/readersinfo.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-readersinfo.Tpo $(DEPDIR)/libbeidcardlayer_la-readersinfo.Plo
#	source='src/readersinfo.cpp' object='libbeidcardlayer_la-readersinfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-readersinfo.lo `test -f 'src/readersinfo.cpp' || echo '$(srcdir)/'`src/readersinfo.cpp

libbeidcardlayer_la-threadpool.lo: src/threadpool.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-threadpool.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-threadpool.Tpo -c -o libbeidcardlayer_la-threadpool.lo `test -f 'src/threadpool.cpp' || echo '$(srcdir)/'`src/threadpool.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-threadpool.Tpo $(DEPDIR)/libbeidcardlayer_la-threadpool.Plo
#	source='src/threadpool.cpp' object='libbeidcardlayer_la-threadpool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-threadpool.lo `test -f 'src/threadpool.cpp' || echo '$(srcdir)/'`src/threadpool.cpp

libbeidcardlayer_la-unknowncard.lo: src/unknowncard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-unknowncard.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-unknowncard.Tpo -c -o libbeidcardlayer_la-unknowncard.lo `test -f 'src/unknowncard.cpp' || echo '$(srcdir)/'`src/unknowncard.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-unknowncard.Tpo $(DEPDIR)/libbeidcardlayer_la-unknowncard.Plo
#	source='src/unknowncard.cpp' object='libbeidcardlayer_la-unknowncard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-unknowncard.lo `test -f 'src/unknowncard.cpp' || echo '$(srcdir)/'`src/unknowncard.cpp

libbeidcardlayer_la-beidcard.lo: src/cardpluginbeid/beidcard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-beidcard.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-beidcard.Tpo -c -o libbeidcardlayer_la-beidcard.lo `test -f 'src/cardpluginbeid/beidcard.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidcard.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-beidcard.Tpo $(DEPDIR)/libbeidcardlayer_la-beidcard.Plo
#	source='src/cardpluginbeid/beidcard.cpp' object='libbeidcardlayer_la-beidcard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-beidcard.lo `test -f 'src/cardpluginbeid/beidcard.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidcard.cpp

libbeidcardlayer_la-beidp15correction.lo: src/cardpluginbeid/beidp15correction.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-beidp15correction.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-beidp15correction.Tpo -c -o libbeidcardlayer_la-beidp15correction.lo `test -f 'src/cardpluginbeid/beidp15correction.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidp15correction.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-beidp15correction.Tpo $(DEPDIR)/libbeidcardlayer_la-beidp15correction.Plo
#	source='src/cardpluginbeid/beidp15correction.cpp' object='libbeidcardlayer_la-beidp15correction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-beidp15correction.lo `test -f 'src/cardpluginbeid/beidp15correction.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidp15correction.cpp

libbeidcardlayer_la-siscard.lo: src/cardpluginsis/siscard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-siscard.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-siscard.Tpo -c -o libbeidcardlayer_la-siscard.lo `test -f 'src/cardpluginsis/siscard.cpp' || echo '$(srcdir)/'`src/cardpluginsis/siscard.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-siscard.Tpo $(DEPDIR)/libbeidcardlayer_la-siscard.Plo
#	source='src/cardpluginsis/siscard.cpp' object='libbeidcardlayer_la-siscard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-siscard.lo `test -f 'src/cardpluginsis/siscard.cpp' || echo '$(srcdir)/'`src/cardpluginsis/siscard.cpp

libbeidcardlayer_la-sispluginhandler.lo: src/cardpluginsis/sispluginhandler.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-sispluginhandler.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-sispluginhandler.Tpo -c -o libbeidcardlayer_la-sispluginhandler.lo `test -f 'src/cardpluginsis/sispluginhandler.cpp' || echo '$(srcdir)/'`src/cardpluginsis/sispluginhandler.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-sispluginhandler.Tpo $(DEPDIR)/libbeidcardlayer_la-sispluginhandler.Plo
#	source='src/cardpluginsis/sispluginhandler.cpp' object='libbeidcardlayer_la-sispluginhandler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-sispluginhandler.lo `test -f 'src/cardpluginsis/sispluginhandler.cpp' || echo '$(srcdir)/'`src/cardpluginsis/sispluginhandler.cpp

libbeidcardlayer_la-pinpadliboldbeid.lo: old/pinpadliboldbeid.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -MT libbeidcardlayer_la-pinpadliboldbeid.lo -MD -MP -MF $(DEPDIR)/libbeidcardlayer_la-pinpadliboldbeid.Tpo -c -o libbeidcardlayer_la-pinpadliboldbeid.lo `test -f 'old/pinpadliboldbeid.cpp' || echo '$(srcdir)/'`old/pinpadliboldbeid.cpp
	$(am__mv) $(DEPDIR)/libbeidcardlayer_la-pinpadliboldbeid.Tpo $(DEPDIR)/libbeidcardlayer_la-pinpadliboldbeid.Plo
#	source='old/pinpadliboldbeid.cpp' object='libbeidcardlayer_la-pinpadliboldbeid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbeidcardlayer_la_CPPFLAGS) $(CPPFLAGS) $(libbeidcardlayer_la_CXXFLAGS) $(CXXFLAGS) -c -o libbeidcardlayer_la-pinpadliboldbeid.lo `test -f 'old/pinpadliboldbeid.cpp' || echo '$(srcdir)/'`old/pinpadliboldbeid.cpp

libcardpluginbeid_la-mw_util.lo: ../common/src/mw_util.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginbeid_la-mw_util.lo -MD -MP -MF $(DEPDIR)/libcardpluginbeid_la-mw_util.Tpo -c -o libcardpluginbeid_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp
	$(am__mv) $(DEPDIR)/libcardpluginbeid_la-mw_util.Tpo $(DEPDIR)/libcardpluginbeid_la-mw_util.Plo
#	source='../common/src/mw_util.cpp' object='libcardpluginbeid_la-mw_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginbeid_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp

libcardpluginbeid_la-beidcard.lo: src/cardpluginbeid/beidcard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginbeid_la-beidcard.lo -MD -MP -MF $(DEPDIR)/libcardpluginbeid_la-beidcard.Tpo -c -o libcardpluginbeid_la-beidcard.lo `test -f 'src/cardpluginbeid/beidcard.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidcard.cpp
	$(am__mv) $(DEPDIR)/libcardpluginbeid_la-beidcard.Tpo $(DEPDIR)/libcardpluginbeid_la-beidcard.Plo
#	source='src/cardpluginbeid/beidcard.cpp' object='libcardpluginbeid_la-beidcard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginbeid_la-beidcard.lo `test -f 'src/cardpluginbeid/beidcard.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidcard.cpp

libcardpluginbeid_la-beidp15correction.lo: src/cardpluginbeid/beidp15correction.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginbeid_la-beidp15correction.lo -MD -MP -MF $(DEPDIR)/libcardpluginbeid_la-beidp15correction.Tpo -c -o libcardpluginbeid_la-beidp15correction.lo `test -f 'src/cardpluginbeid/beidp15correction.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidp15correction.cpp
	$(am__mv) $(DEPDIR)/libcardpluginbeid_la-beidp15correction.Tpo $(DEPDIR)/libcardpluginbeid_la-beidp15correction.Plo
#	source='src/cardpluginbeid/beidp15correction.cpp' object='libcardpluginbeid_la-beidp15correction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginbeid_la-beidp15correction.lo `test -f 'src/cardpluginbeid/beidp15correction.cpp' || echo '$(srcdir)/'`src/cardpluginbeid/beidp15correction.cpp

libcardpluginbeid_la-cache.lo: src/cache.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginbeid_la-cache.lo -MD -MP -MF $(DEPDIR)/libcardpluginbeid_la-cache.Tpo -c -o libcardpluginbeid_la-cache.lo `test -f 'src/cache.cpp' || echo '$(srcdir)/'`src/cache.cpp
	$(am__mv) $(DEPDIR)/libcardpluginbeid_la-cache.Tpo $(DEPDIR)/libcardpluginbeid_la-cache.Plo
#	source='src/cache.cpp' object='libcardpluginbeid_la-cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginbeid_la-cache.lo `test -f 'src/cache.cpp' || echo '$(srcdir)/'`src/cache.cpp

libcardpluginbeid_la-card.lo: src/card.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginbeid_la-card.lo -MD -MP -MF $(DEPDIR)/libcardpluginbeid_la-card.Tpo -c -o libcardpluginbeid_la-card.lo `test -f 'src/card.cpp' || echo '$(srcdir)/'`src/card.cpp
	$(am__mv) $(DEPDIR)/libcardpluginbeid_la-card.Tpo $(DEPDIR)/libcardpluginbeid_la-card.Plo
#	source='src/card.cpp' object='libcardpluginbeid_la-card.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginbeid_la-card.lo `test -f 'src/card.cpp' || echo '$(srcdir)/'`src/card.cpp

libcardpluginbeid_la-pkicard.lo: src/pkicard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginbeid_la-pkicard.lo -MD -MP -MF $(DEPDIR)/libcardpluginbeid_la-pkicard.Tpo -c -o libcardpluginbeid_la-pkicard.lo `test -f 'src/pkicard.cpp' || echo '$(srcdir)/'`src/pkicard.cpp
	$(am__mv) $(DEPDIR)/libcardpluginbeid_la-pkicard.Tpo $(DEPDIR)/libcardpluginbeid_la-pkicard.Plo
#	source='src/pkicard.cpp' object='libcardpluginbeid_la-pkicard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginbeid_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginbeid_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginbeid_la-pkicard.lo `test -f 'src/pkicard.cpp' || echo '$(srcdir)/'`src/pkicard.cpp

libcardpluginsis_la-mw_util.lo: ../common/src/mw_util.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginsis_la-mw_util.lo -MD -MP -MF $(DEPDIR)/libcardpluginsis_la-mw_util.Tpo -c -o libcardpluginsis_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp
	$(am__mv) $(DEPDIR)/libcardpluginsis_la-mw_util.Tpo $(DEPDIR)/libcardpluginsis_la-mw_util.Plo
#	source='../common/src/mw_util.cpp' object='libcardpluginsis_la-mw_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginsis_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp

libcardpluginsis_la-siscard.lo: src/cardpluginsis/siscard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginsis_la-siscard.lo -MD -MP -MF $(DEPDIR)/libcardpluginsis_la-siscard.Tpo -c -o libcardpluginsis_la-siscard.lo `test -f 'src/cardpluginsis/siscard.cpp' || echo '$(srcdir)/'`src/cardpluginsis/siscard.cpp
	$(am__mv) $(DEPDIR)/libcardpluginsis_la-siscard.Tpo $(DEPDIR)/libcardpluginsis_la-siscard.Plo
#	source='src/cardpluginsis/siscard.cpp' object='libcardpluginsis_la-siscard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginsis_la-siscard.lo `test -f 'src/cardpluginsis/siscard.cpp' || echo '$(srcdir)/'`src/cardpluginsis/siscard.cpp

libcardpluginsis_la-cache.lo: src/cache.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginsis_la-cache.lo -MD -MP -MF $(DEPDIR)/libcardpluginsis_la-cache.Tpo -c -o libcardpluginsis_la-cache.lo `test -f 'src/cache.cpp' || echo '$(srcdir)/'`src/cache.cpp
	$(am__mv) $(DEPDIR)/libcardpluginsis_la-cache.Tpo $(DEPDIR)/libcardpluginsis_la-cache.Plo
#	source='src/cache.cpp' object='libcardpluginsis_la-cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginsis_la-cache.lo `test -f 'src/cache.cpp' || echo '$(srcdir)/'`src/cache.cpp

libcardpluginsis_la-card.lo: src/card.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginsis_la-card.lo -MD -MP -MF $(DEPDIR)/libcardpluginsis_la-card.Tpo -c -o libcardpluginsis_la-card.lo `test -f 'src/card.cpp' || echo '$(srcdir)/'`src/card.cpp
	$(am__mv) $(DEPDIR)/libcardpluginsis_la-card.Tpo $(DEPDIR)/libcardpluginsis_la-card.Plo
#	source='src/card.cpp' object='libcardpluginsis_la-card.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginsis_la-card.lo `test -f 'src/card.cpp' || echo '$(srcdir)/'`src/card.cpp

libcardpluginsis_acr38u_la-mw_util.lo: ../common/src/mw_util.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_acr38u_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_acr38u_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginsis_acr38u_la-mw_util.lo -MD -MP -MF $(DEPDIR)/libcardpluginsis_acr38u_la-mw_util.Tpo -c -o libcardpluginsis_acr38u_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp
	$(am__mv) $(DEPDIR)/libcardpluginsis_acr38u_la-mw_util.Tpo $(DEPDIR)/libcardpluginsis_acr38u_la-mw_util.Plo
#	source='../common/src/mw_util.cpp' object='libcardpluginsis_acr38u_la-mw_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_acr38u_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_acr38u_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginsis_acr38u_la-mw_util.lo `test -f '../common/src/mw_util.cpp' || echo '$(srcdir)/'`../common/src/mw_util.cpp

libcardpluginsis_acr38u_la-siscard.lo: src/cardpluginsis_acr38u/siscard.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_acr38u_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_acr38u_la_CXXFLAGS) $(CXXFLAGS) -MT libcardpluginsis_acr38u_la-siscard.lo -MD -MP -MF $(DEPDIR)/libcardpluginsis_acr38u_la-siscard.Tpo -c -o libcardpluginsis_acr38u_la-siscard.lo `test -f 'src/cardpluginsis_acr38u/siscard.cpp' || echo '$(srcdir)/'`src/cardpluginsis_acr38u/siscard.cpp
	$(am__mv) $(DEPDIR)/libcardpluginsis_acr38u_la-siscard.Tpo $(DEPDIR)/libcardpluginsis_acr38u_la-siscard.Plo
#	source='src/cardpluginsis_acr38u/siscard.cpp' object='libcardpluginsis_acr38u_la-siscard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcardpluginsis_acr38u_la_CPPFLAGS) $(CPPFLAGS) $(libcardpluginsis_acr38u_la_CXXFLAGS) $(CXXFLAGS) -c -o libcardpluginsis_acr38u_la-siscard.lo `test -f 'src/cardpluginsis_acr38u/siscard.cpp' || echo '$(srcdir)/'`src/cardpluginsis_acr38u/siscard.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags dist \
	dist-all dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
